<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zrocky</title>
    <description>Think Different</description>
    <link>http://zrocky.com/</link>
    <atom:link href="http://zrocky.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 24 Jun 2020 17:23:30 +0800</pubDate>
    <lastBuildDate>Wed, 24 Jun 2020 17:23:30 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>SRS使用</title>
        <description>&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;&amp;gt; Install docker&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download docker from &lt;a href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;here&lt;/a&gt; then start docker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;&amp;gt; Clone SRS&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://gitee.com/winlinvip/srs.oschina.git srs &amp;amp;&amp;amp;
cd srs &amp;amp;&amp;amp; git remote set-url origin https://github.com/ossrs/srs.git &amp;amp;&amp;amp; git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Please read &lt;a href=&quot;https://github.com/ossrs/srs#usage&quot;&gt;https://github.com/ossrs/srs#usage&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt;&amp;gt; Start docker&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it --name=srs -v `pwd`:/tmp/srs -w /tmp/srs/trunk -p 1935:1935 \
  -p 1985:1985 -p 8080:8080 -p 8085:8085 registry.cn-hangzhou.aliyuncs.com/ossrs/srs:dev bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: We use &lt;a href=&quot;https://cr.console.aliyun.com/&quot;&gt;AliyunCR&lt;/a&gt;, you can directly use &lt;code class=&quot;highlighter-rouge&quot;&gt;ossrs/srs:dev&lt;/code&gt; instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Build SRS in docker&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure &amp;amp;&amp;amp; make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Run SRS in docker&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./objs/srs -c conf/console.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 10:49:14 +0800</pubDate>
        <link>http://zrocky.com/2020/06/use-srs/</link>
        <guid isPermaLink="true">http://zrocky.com/2020/06/use-srs/</guid>
        
        <category>docker</category>
        
        <category>framework</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>map与flatMap和compactMap的区别</title>
        <description>&lt;h1 id=&quot;map与flatmap和compactmap的区别&quot;&gt;map与flatMap和compactMap的区别&lt;/h1&gt;

&lt;p&gt;Swift在&lt;em&gt;4.1&lt;/em&gt;版本之前只有&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt;函数，之后引入了&lt;code class=&quot;highlighter-rouge&quot;&gt;compactMap&lt;/code&gt;函数，但是&lt;code class=&quot;highlighter-rouge&quot;&gt;compactMap&lt;/code&gt;函数并不是实现新的功能，而是用来解决&lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt;函数功能不唯一的问题。原先&lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt;函数既有去除nil的功能，也能将多维数组降维成一维，这违背了函数设计的单一职责原则，所以 Swift &lt;em&gt;4.1&lt;/em&gt;以后，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;flatMap&lt;/code&gt;函数只解决降维问题，去除nil的功能由新引入的&lt;code class=&quot;highlighter-rouge&quot;&gt;compactMap&lt;/code&gt;函数完成。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;map函数&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;逐个处理数组中的元素，并生成新数组&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;flatMap函数&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;函数一致，只是当结果返回nil时，新数组会去除这一项&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/image-20200423120104137.png&quot; alt=&quot;image-20200423120104137&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;compactMap函数&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;函数一致，但当原数组是多维数组时，新数组只会返回一维数组&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/image-20200423120137384.png&quot; alt=&quot;image-20200423120137384&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 10:49:14 +0800</pubDate>
        <link>http://zrocky.com/2020/06/map-flatmap-compactmap/</link>
        <guid isPermaLink="true">http://zrocky.com/2020/06/map-flatmap-compactmap/</guid>
        
        <category>Swift</category>
        
        <category>函数</category>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>iOS项目使用Universal Links</title>
        <description>&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Universal Links&lt;/code&gt;来取代&lt;code class=&quot;highlighter-rouge&quot;&gt;Scheme&lt;/code&gt;的跳转App功能，有更好的安全性（第三方不能使用这种方法跳转你的App），且不会弹出跳转确认框。可以查看&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1&quot;&gt;官方文档 &lt;/a&gt;获取更详细的介绍。&lt;/p&gt;

&lt;p&gt;要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Universal Links&lt;/code&gt;，首先需要一个网站，该网站必须使用&lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt;协议（存疑，我使用http跳转也能成功），然后按以下步骤操作：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;创建一个无后缀文件，文件名为&lt;code class=&quot;highlighter-rouge&quot;&gt;apple-app-site-association&lt;/code&gt;，写入以下信息：&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;applinks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;apps&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;details&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;appID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;9JA89QQLNQ.com.apple.wwdc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;paths&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/wwdc/news/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/videos/wwdc/2015/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;appID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ABCD1234.com.apple.wwdc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;paths&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;

    &lt;blockquote&gt;
      &lt;p&gt;其中&lt;code class=&quot;highlighter-rouge&quot;&gt;appID&lt;/code&gt;是一个App的唯一标识，写入格式为&lt;code class=&quot;highlighter-rouge&quot;&gt;{TeamID}.{App BundleIdentifier}&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt;是网站的目录，可写入多个，&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;作为通配符使用&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;将&lt;code class=&quot;highlighter-rouge&quot;&gt;apple-app-site-association&lt;/code&gt;文件上传至你网站的根目录或者&lt;code class=&quot;highlighter-rouge&quot;&gt;.well-known&lt;/code&gt;目录，上传成功，此文件应可以直接下载（该文件配置好后，需要等待一段时间才会生效）&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在开发证书页面中勾选应用ID的&lt;code class=&quot;highlighter-rouge&quot;&gt;Associated Domains&lt;/code&gt;权限，并正确安装该应用的&lt;code class=&quot;highlighter-rouge&quot;&gt;Profile&lt;/code&gt;文件&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/post/image-20200325143312973.png&quot; alt=&quot;image-20200325143312973&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在Xcode中配置应用的&lt;code class=&quot;highlighter-rouge&quot;&gt;Associated Domains&lt;/code&gt;，前缀必须是&lt;code class=&quot;highlighter-rouge&quot;&gt;applinks:&lt;/code&gt;，接着加上你的网站域名&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/post/image-20200325143736941.png&quot; alt=&quot;image-20200325143736941&quot; /&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;网站域名可使用通配符&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;，例如&lt;code class=&quot;highlighter-rouge&quot;&gt;*.apple.com&lt;/code&gt;&lt;/p&gt;

      &lt;p&gt;域名匹配规则是取较长的字符串，所以&lt;code class=&quot;highlighter-rouge&quot;&gt;*.apple.com&lt;/code&gt;是匹配不到&lt;code class=&quot;highlighter-rouge&quot;&gt;apple.com&lt;/code&gt;的，这点需要注意&lt;/p&gt;

      &lt;p&gt;如果有多个网站，则可以添加多条&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;当从网站跳转App时，iOS将会通知App，并且传递了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;NSUserActivity&lt;/code&gt;对象，该对象包含了用户正在访问的web链接&lt;code class=&quot;highlighter-rouge&quot;&gt;webpageURL&lt;/code&gt;，实现&lt;code class=&quot;highlighter-rouge&quot;&gt;AppDelegate&lt;/code&gt;的代理方法，可以拦截到该事件：&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;userActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSUserActivity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;restorationHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;@escaping&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UIUserActivityRestoring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]?)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;current url is &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webpageURL&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 10:49:14 +0800</pubDate>
        <link>http://zrocky.com/2020/06/ios-use-universal-links/</link>
        <guid isPermaLink="true">http://zrocky.com/2020/06/ios-use-universal-links/</guid>
        
        <category>应用间跳转</category>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>Mac设置Git代理</title>
        <description>&lt;p&gt;&lt;strong&gt;设置git代理：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;设置github.com走代理&lt;/p&gt;

    &lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.gitconfig&lt;/code&gt;文件，添加以下代码：&lt;/p&gt;

    &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[https &quot;https://github.com&quot;]
  proxy = socks5://127.0.0.1:1086
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设置github.com走IP（效果未验证，可跳过此步骤）&lt;/p&gt;

    &lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt;文件，添加以下代码：&lt;/p&gt;

    &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;151.101.72.249 http://global-ssl.fastly.Net
192.30.253.112 http://github.com
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;查看git当前代理设置：**&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/image-20200323111441498.png&quot; alt=&quot;image-20200323111441498&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果出现箭头所指代理，即设置成功&lt;/p&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 10:49:14 +0800</pubDate>
        <link>http://zrocky.com/2020/06/git-proxy-setup/</link>
        <guid isPermaLink="true">http://zrocky.com/2020/06/git-proxy-setup/</guid>
        
        <category>Mac</category>
        
        <category>Git</category>
        
        
        <category>Mac</category>
        
      </item>
    
      <item>
        <title>Git常用命令</title>
        <description>&lt;p&gt;&lt;strong&gt;删除远程分支tag&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;先删除本地仓库tag
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  git tag -d &lt;span class=&quot;nv&quot;&gt;$tagname&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;再删除远程仓库tag
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  git push origin :refs/tags/&lt;span class=&quot;nv&quot;&gt;$tagname&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;查看历史命令&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git reflog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;撤销更改&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;撤销工作区所有更改
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  git checkout .
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;撤销暂存区所有更改
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  git reset HEAD 
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 10:49:14 +0800</pubDate>
        <link>http://zrocky.com/2020/06/git-command/</link>
        <guid isPermaLink="true">http://zrocky.com/2020/06/git-command/</guid>
        
        <category>Git</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>绘图公式</title>
        <description>&lt;p&gt;&lt;strong&gt;圆&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;面积：&lt;img src=&quot;/assets/images/post/image-20200610163937035.png&quot; alt=&quot;image-20200610163937035&quot; /&gt;&lt;/p&gt;

&lt;p&gt;周长：&lt;img src=&quot;/assets/images/post/image-20200610165651297.png&quot; alt=&quot;image-20200610165651297&quot; /&gt;&lt;/p&gt;

&lt;p&gt;求圆心为&lt;em&gt;(a, b)&lt;/em&gt;的圆上点坐标：&lt;img src=&quot;/assets/images/post/image-20200622173643328.png&quot; alt=&quot;image-20200622173643328&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;椭圆&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;求圆心为&lt;em&gt;(h, k)&lt;/em&gt;，长半径为&lt;em&gt;a&lt;/em&gt;、短半径为&lt;em&gt;b&lt;/em&gt;的椭圆上点坐标：&lt;img src=&quot;/assets/images/post/image-20200610171656155.png&quot; alt=&quot;image-20200610171656155&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 10:49:14 +0800</pubDate>
        <link>http://zrocky.com/2020/06/draw-formula/</link>
        <guid isPermaLink="true">http://zrocky.com/2020/06/draw-formula/</guid>
        
        <category>Math</category>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Mac设置curl代理</title>
        <description>&lt;p&gt;编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.curlrc&lt;/code&gt;文件，添加以下代码：&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;socks5=127.0.0.1:1086
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 10:49:14 +0800</pubDate>
        <link>http://zrocky.com/2020/06/curl-proxy-setup/</link>
        <guid isPermaLink="true">http://zrocky.com/2020/06/curl-proxy-setup/</guid>
        
        <category>Mac</category>
        
        <category>curl</category>
        
        
        <category>Mac</category>
        
      </item>
    
      <item>
        <title>接入IJKPlayer</title>
        <description>&lt;p&gt;项目地址： https://github.com/bilibili/ijkplayer&lt;/p&gt;

&lt;p&gt;官方Build说明:&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/Bilibili/ijkplayer.git ijkplayer-ios
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ijkplayer-ios
git checkout -B latest k0.8.8

./init-ios.sh

&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ios
./compile-ffmpeg.sh clean
./compile-ffmpeg.sh all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;接入过程说明：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;按官方给出说明，到最后一步&lt;code class=&quot;highlighter-rouge&quot;&gt;all&lt;/code&gt;命令时，会报armv7错误，原因可能是XCode不再支持32位系统，解决办法就是修改&lt;code class=&quot;highlighter-rouge&quot;&gt;compile-ffmpeg.sh&lt;/code&gt;文件，将&lt;code class=&quot;highlighter-rouge&quot;&gt;armv7&lt;/code&gt;删除。
  &lt;img src=&quot;%E6%8E%A5%E5%85%A5IJKPlayer.assets/image-20200507164043340.png&quot; alt=&quot;image-20200507164043340&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;接入到自己的项目时，我采用framework形式，所以需要制作静态库，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;IJKMediaPlayer&lt;/code&gt;文件夹中的项目制作；build真机包时，报了&lt;code class=&quot;highlighter-rouge&quot;&gt;avconfig.h&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;config.h&lt;/code&gt;文件not found，找到对应文件，注释&lt;code class=&quot;highlighter-rouge&quot;&gt;includ armv7&lt;/code&gt;行即可。文件位置&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/build/universal/include/libffmpeg/config.h&lt;/code&gt;及&lt;code class=&quot;highlighter-rouge&quot;&gt;ios/build/universal/include/libavutil/avconfig.h&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;%E6%8E%A5%E5%85%A5IJKPlayer.assets/5276080-b6fdc7d5ee1bcfdb.png&quot; alt=&quot;5276080-b6fdc7d5ee1bcfdb&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 17 Jun 2020 10:49:14 +0800</pubDate>
        <link>http://zrocky.com/2020/06/access-ijkplayer/</link>
        <guid isPermaLink="true">http://zrocky.com/2020/06/access-ijkplayer/</guid>
        
        <category>Framework</category>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>使用Git进行版本控制</title>
        <description>&lt;p&gt;公司一直在使用SVN来做版本控制，虽然个人项目早已换成Git，但是对Git没有一个深入的了解，最近因为分支和标签用法的困惑，继而产生想系统学习Git使用的想法，本文是基于&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot;&gt;廖雪峰Git教程&lt;/a&gt;而整理的学习笔记。&lt;/p&gt;

&lt;h2 id=&quot;git概念&quot;&gt;Git概念&lt;/h2&gt;

&lt;h3 id=&quot;版本库和工作区&quot;&gt;版本库和工作区&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393197926757.jpg&quot; alt=&quot;版本库和工作区&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;是Git自动创建的第一个分支&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Git&lt;/code&gt;工作分为两步&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;把文件修改添加到暂存区
 &lt;img src=&quot;/assets/images/post/2018-10-12-15393198237337.jpg&quot; alt=&quot;git add&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;把暂存区的所有内容提交到当前分支
 &lt;img src=&quot;/assets/images/post/2018-10-12-15393198436289.jpg&quot; alt=&quot;git commit&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;git协议&quot;&gt;Git协议&lt;/h3&gt;

&lt;p&gt;Git支持多种协议，&lt;code class=&quot;highlighter-rouge&quot;&gt;git://&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt;等，&lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt;协议速度会慢一些&lt;/p&gt;

&lt;h3 id=&quot;专有名词&quot;&gt;专有名词&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;git自动创建的第一个分支&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;当前版本&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;远程库&lt;/p&gt;

&lt;h2 id=&quot;基础命令&quot;&gt;基础命令&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在目录中初始化Git&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git init
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将修改添加到Git&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # 添加全部改动（常用）
 git add .

 # 添加具体变动
 git add file1 file2
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将修改提交&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git commit -m &quot;changelog&quot;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看仓库当前状态&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git status
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看文件修改内容&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git diff filename
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看Git日志&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # 完整日志（带时间）
 git log
    
 #精简日志
 git log --pretty=oneline
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将当前版本回退（切换）到具体版本&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # 回退到具体版本号（版本号不需要写全，只需前几位）
 git reset --hard commit_id
    
 # 回退到当前版本的上一版本
 git reset --hard HEAD^
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;HEAD表示当前版本
上一个版本就是HEAD\^
上上一个版本就是HEAD\^\^
当然往上100个版本写100个\^比较容易数不过来，所以写成HEAD~100&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;查看历史命令（历史版本号）&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git reflog
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;撤销工作区中的修改（使用版本库中的版本替换工作区版本）&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # “--”很重要，不然会和checkout命令冲突
 git checkout -- filename
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;一种是file自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；&lt;/li&gt;
    &lt;li&gt;一种是file已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;撤销暂存区中的修改&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git reset HEAD filename
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将本地仓库添加到远程库中&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add origin git@github.com:zrocky/testgit.git
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将本地库中的内容推送到远程库上&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 首次push需添加-u参数
git push -u origin master
    
# 提交到远程库
git push origin master
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;从远程库中克隆到本地库&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:zrocky/testgit.git
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;分支与标签&quot;&gt;分支与标签&lt;/h2&gt;

&lt;h3 id=&quot;branch分支&quot;&gt;Branch（分支）&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;为主分支&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;指向当前分支&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393228460803.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;每次提交&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支都会向前移动一步&lt;/p&gt;
&lt;video controls=&quot;controls&quot; src=&quot;/assets/images/post/master-branch-forward.mp4&quot; width=&quot;100%&quot;&gt;&lt;/video&gt;

&lt;p&gt;创建新的分支&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;，将&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;指向&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393233193864.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从现在开始，工作区的修改和提交就是针对&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支的了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393233502209.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;假如我们在&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;上的工作完成了，就可以把&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;合并到&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;上&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393233995876.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;合并完分支后，甚至可以删除&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支。删除&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支就是把&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;指针给删掉，删掉后，我们就剩下了一条&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393234395115.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;过程动画：&lt;/p&gt;
&lt;video controls=&quot;controls&quot; src=&quot;/assets/images/post/master-and-dev-ff.mp4&quot; width=&quot;100%&quot;&gt;&lt;/video&gt;

&lt;h4 id=&quot;分支命令&quot;&gt;分支命令&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;创建分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git branch dev
    
 # 创建并切换分支
 git checkout -b dev
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;切换分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git checkout dev
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看当前分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git branch
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;合并分支到当前分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git merge dev
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;删除分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git branch -d dev
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看分支合并图&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git log --graph
    
 # 显示简化图
 git log --graph --pretty=oneline --abbrev-commit
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;分支合并冲突&quot;&gt;分支合并冲突&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393286280378.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此种情况需解决冲突再提交&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393287303720.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;分支策略&quot;&gt;分支策略&lt;/h4&gt;

&lt;p&gt;如果分支合并没有冲突等异常情况，Git会使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Fast forward（快进）&lt;/code&gt;模式，该模式下，删除分支后，会丢失分支信息&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;--no--ff&lt;/code&gt;参数禁用&lt;code class=&quot;highlighter-rouge&quot;&gt;Fast forward&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git merge --no-ff -m &quot;merge with no-ff&quot; dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-10-12-15393299601183.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;分支开发策略&quot;&gt;分支开发策略&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支是非常稳定的，也就是仅用来发布新版本，平时不在上面工作，开发都在&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支上，每个人再有自己的分支，按时向&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支合并即可，团队合作的分支看起来是这样的&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/15393300560209.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;bug处理分支&quot;&gt;bug处理分支&lt;/h5&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支工作，手头工作并未完成，不能提交，但是bug急修，这个时候，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;stash&lt;/code&gt;先将工作区暂时“储藏”起来，等修复bug后再恢复&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git stash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;假定为修复线上bug，可从&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支创建临时分支&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b issus-101
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;bug修复完成后，合并分支到&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;，再切换回&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;stash&lt;/code&gt;恢复之前的工作区&lt;/p&gt;

&lt;p&gt;查看&lt;code class=&quot;highlighter-rouge&quot;&gt;stash&lt;/code&gt;挂起的任务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git stash list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;恢复&lt;code class=&quot;highlighter-rouge&quot;&gt;stash&lt;/code&gt;任务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 只恢复任务，挂起的任务还在list中
git stash apply stash@{0}

# 恢复的同时把stash挂起任务删除
git stash pop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;删除&lt;code class=&quot;highlighter-rouge&quot;&gt;stash list&lt;/code&gt;中任务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git stash drop stash@{0}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;feature分支&quot;&gt;Feature分支&lt;/h5&gt;

&lt;p&gt;feature分支和bug分支的处理类似，但如果feature最终放弃，需要删除分支时，使用原来的分支将会报错，需要删除未合并的分支时，要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-D&lt;/code&gt;参数强行删除&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch -D feature-vulcan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;多人协作&quot;&gt;多人协作&lt;/h5&gt;

&lt;p&gt;查看远程库信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote

# 详细信息
git remote -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;推送分支到远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 主分支
git push origin master

# 开发分支
git push origin dev

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支为主分支，需要时刻与远程同步&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步&lt;/li&gt;
    &lt;li&gt;bug和feature则按需求决定是否同步到远程&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h6 id=&quot;抓取分支&quot;&gt;抓取分支&lt;/h6&gt;

&lt;p&gt;从远程库&lt;code class=&quot;highlighter-rouge&quot;&gt;clone&lt;/code&gt;到本地时，默认只能看到&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支，如果需要再&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;等其它分支上开发，则必须创建&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;远程库的&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支到本地&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b dev origin/dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果&lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt;更新到远程分支时发生冲突，则需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;命令从远程拉取更新，在本地处理完冲突后，再用&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin &amp;lt;branch-name&amp;gt;&lt;/code&gt;命令&lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt;到远程库&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;如果&lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;命令提示&lt;code class=&quot;highlighter-rouge&quot;&gt;no tracking information&lt;/code&gt;，则说明本地分支和远程分支的链接关系没有创建，用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch --set-upstream-to &amp;lt;branch-name&amp;gt; origin/&amp;lt;branch-name&amp;gt;&lt;/code&gt;解决&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;rebase变基&quot;&gt;Rebase（变基）&lt;/h5&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;rebase&lt;/code&gt;可以整理本地&lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt;的分叉，使之变成线性，而不再是“蜘蛛网”，&lt;code class=&quot;highlighter-rouge&quot;&gt;rebase&lt;/code&gt;只对尚未推送或分享给别人的本地修改执行变基操作清理历史，从不对已推送至别处的提交执行变基操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git rebase
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;tag-标签&quot;&gt;Tag (标签）&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt;是版本库的一个快照，和&lt;code class=&quot;highlighter-rouge&quot;&gt;branch&lt;/code&gt;相似，但是不能像&lt;code class=&quot;highlighter-rouge&quot;&gt;branch&lt;/code&gt;一样移动&lt;/p&gt;

&lt;p&gt;基于当前分支创建新标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag v1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;基于特定版本创建新标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag v0.9 f52c633

# 指定说明文字
git tag -a v0.1 -m &quot;version 0.1 released&quot; 1094adb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;查看所有标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;查看某个标签的信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git show v0.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;推送标签到远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push origin v1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;推送全部标签到远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push origin --tags
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;删除本地标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag -d v0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;删除远程标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 先在本地删除
git tag -d v0.9

# 远程删除
git push origin :refs/tags/v0.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;git高级&quot;&gt;Git高级&lt;/h2&gt;

&lt;h3 id=&quot;远程库操作&quot;&gt;远程库操作&lt;/h3&gt;

&lt;p&gt;删除远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote rm origin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;只删除了关联关系，并未删除远程数据&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;添加多个远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add bitbucket git@bitbucket.org:Zrocky/git_test.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;只需在push时，选择相应的远程库即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;修改远程库名称&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote rename oldname newname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;忽略文件&quot;&gt;忽略文件&lt;/h3&gt;

&lt;p&gt;有一些文件你不想上传至git仓库中，这个时候可以使用忽略功能，将需要忽略的文件标示给git。&lt;/p&gt;

&lt;p&gt;首先在Git工作区的根目录创建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;文件，把需要忽略的文件名填写进去，git就会自动忽略这些文件。GitHub创建了一些可供参考的预设文件，我们可以直接拿来修改使用:&lt;a href=&quot;https://github.com/github/gitignore&quot;&gt;gitignore&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;忽略文件的原则是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;忽略操作系统自动生成的文件，比如缩略图等；&lt;/li&gt;
  &lt;li&gt;忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；&lt;/li&gt;
  &lt;li&gt;忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;搭建git服务器&quot;&gt;搭建Git服务器&lt;/h3&gt;

&lt;p&gt;搭建Git服务器，需要准备一台运行Linux的机器，推荐使用Ubuntu或Debian&lt;/p&gt;

&lt;p&gt;第一步，安装&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第二步，创建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;用户，用来运行&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;服务：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo adduser git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第三步，创建证书登录&lt;/p&gt;

&lt;p&gt;收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。&lt;/p&gt;

&lt;p&gt;第四部，初始化Git仓库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo git init --bare sample.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Git就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。然后，把owner改为git：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown -R git:git sample.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第五步，禁用shell登录&lt;/p&gt;

&lt;p&gt;出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过编辑/etc/passwd文件完成。找到类似下面的一行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git:x:1001:1001:,,,:/home/git:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;改为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第六步，克隆远程仓库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@server:/srv/sample.git 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;管理公钥&quot;&gt;管理公钥&lt;/h4&gt;

&lt;p&gt;如果团队成员比较多，可以使用&lt;a href=&quot;https://github.com/res0nat0r/gitosis&quot;&gt;Gitosis&lt;/a&gt;管理公钥&lt;/p&gt;

&lt;h4 id=&quot;管理权限&quot;&gt;管理权限&lt;/h4&gt;

&lt;p&gt;Git本身不支持权限控制，不过Git支持hook，所有可以在服务器端编写脚本实现权限控制，使用&lt;a href=&quot;https://github.com/sitaramc/gitolite&quot;&gt;Gitolite&lt;/a&gt;可以实现这个功能&lt;/p&gt;

</description>
        <pubDate>Mon, 15 Oct 2018 22:26:19 +0800</pubDate>
        <link>http://zrocky.com/2018/10/how-to-use-git/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/10/how-to-use-git/</guid>
        
        <category>Git</category>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>使用fastlane自动部署iOS App</title>
        <description>&lt;p&gt;fastlane是为iOS和Android应用程序自动执行beta部署和发布的最简单方法。它处理所有繁琐的任务，例如生成屏幕截图，处理代码签名和发布应用程序。&lt;/p&gt;

&lt;h2 id=&quot;基本使用&quot;&gt;基本使用&lt;/h2&gt;

&lt;h3 id=&quot;安装fastlane&quot;&gt;安装fastlane&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装最新的Xcode命令行工具&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; xcode-select --install
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装fastlane（可以使用RubyGems或Homebrew安装）&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Using RubyGems
 sudo gem install fastlane -NV
    
 # Alternatively using Homebrew
 brew cask install fastlane
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;初始化fastlane&quot;&gt;初始化fastlane&lt;/h3&gt;

&lt;p&gt;在Shell中，切换到项目目录并运行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-09-11-15366328908637.jpg&quot; alt=&quot;fastlane_init&quot; /&gt;&lt;/p&gt;

&lt;p&gt;fastlane提供了几种默认的配置，可以根据实际需求选择，期间可能会要求输入一些配置信息，根据提示输入即可。&lt;/p&gt;

&lt;p&gt;根据你选择的配置，会生成不同的配置文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-09-11-15366335231432.jpg&quot; alt=&quot;fastlane_file&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Fastfile&lt;/code&gt;包含了发布应用程序所需的所有信息。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Appfile&lt;/code&gt;包含了fastlane工具中使用的基本配置信息（如Apple ID、Bundle identifier等），这些信息可以让你更快地部署&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;。&lt;a href=&quot;#Appfile&quot;&gt;更多&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./Gemfile&lt;/code&gt;存储了fastlane所需的依赖条件。&lt;a href=&quot;#使用Gemfile进行依赖管理&quot;&gt;更多&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;使用fastlane发布ios-app&quot;&gt;使用fastlane发布iOS App&lt;/h3&gt;

&lt;p&gt;一个App的发布流程，大致分为&lt;code class=&quot;highlighter-rouge&quot;&gt;代码签名&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;应用构建&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;发布&lt;/code&gt;几个步骤，以下将详细介绍每个步骤&lt;/p&gt;

&lt;h4 id=&quot;初识lane&quot;&gt;初识lane&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Fastlane&lt;/code&gt;文件中默认配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;default_platform(:ios)

platform :ios do
  desc &quot;Description of what the lane does&quot;
  lane :custom_lane do
    # do something
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;每个&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;即一个流程，可在这里配置例如Beta部署或发布App Store的操作。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;platform&lt;/code&gt;表示&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;所运行的平台&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中，我们可以使用fastlane创建的&lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt;，或者第三方的插件来实现我们所需要的操作。&lt;/p&gt;

&lt;p&gt;在Shell中切换到项目根目录，使用以下方法执行&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane custom_lane
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;代码签名&quot;&gt;代码签名&lt;/h4&gt;

&lt;p&gt;如果你不熟悉代码前面，请查看&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/401/&quot;&gt;Xcode代码签名基础知识的WWDC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这里使用的&lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt;均为自动设置代码签名，如果你已经手动设置好了，且不需要fastlane为你做此项配置，可直接跳到&lt;a href=&quot;#构建应用&quot;&gt;下一步骤&lt;/a&gt;。&lt;/p&gt;

&lt;h5 id=&quot;match&quot;&gt;match&lt;/h5&gt;

&lt;p&gt;通过使用&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;，可以将私钥和证书存储在Git仓库中，以便跨机器同步它们。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;match(git_url: &quot;https://github.com/fastlane/certificates&quot;,
      type: &quot;adhoc&quot;,
      app_identifier: &quot;tools.fastlane.app&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;关于match的配置方法，我单独写了一篇文章介绍，推荐使用这种方法。&lt;a href=&quot;https://zrocky.com/2018/how-to-use-fastlane-match&quot;&gt;使用match同步证书和配置文件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;会要求您撤销现有证书&lt;/p&gt;

&lt;h5 id=&quot;cert和sigh&quot;&gt;cert和sigh&lt;/h5&gt;

&lt;p&gt;如果你不想撤销现有证书，但仍想使用自动设置，则可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;将确保你在本地计算机上安装了有效的证书及其私钥&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;将确保你在本地安装了与证书相匹配的有效配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane: beta do
    cert
    sigh(force: true)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;force: true&lt;/code&gt;将确保每次运行时重新生成配置文件。&lt;/p&gt;

&lt;h6 id=&quot;cert&quot;&gt;cert&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;将检查本地计算机上是否安装了任何可用的签名证书。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane cert
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;只有在需要创建新证书的时候，&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;才会&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建一个新的私钥&lt;/li&gt;
  &lt;li&gt;创建新的签名请求&lt;/li&gt;
  &lt;li&gt;生成、下载和安装证书&lt;/li&gt;
  &lt;li&gt;将所有生成的文件导入到Keychain中&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;永远不会撤销你现有的证书。如果无法再创建证书，则&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;将引发异常，这意味着你必须撤销其中一个现有证书来为新证书腾出空间。&lt;/p&gt;

&lt;p&gt;设置Apple ID&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane cert -u cert@krausefx.com

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cert(
    development: true,
    username: &quot;user@email.com&quot;
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#cert参数&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;无法从Apple Developer Portal下载现有证书+私钥，因为私钥永远不会离开你的计算机。&lt;/p&gt;

&lt;h6 id=&quot;sigh&quot;&gt;sigh&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;执行的文件操作&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/2018-09-11-sighRecording.gif&quot; alt=&quot;sighRecording&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;将默认为App Store创建、修复和下载配置文件。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane sigh --appstore  # default
fastlane sigh --adhoc
fastlane sigh --development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;设置标识符和用户名：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane sigh -a com.krausefx.app -u username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane: beta do
    sigh(
        adhoc: true,
        force: true,
        filename: &quot;myFile.mobileprovision&quot;
    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#sigh参数&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;永远不会触及或使用由Xcode创建和管理的配置文件。相反，&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;将管理自己的一组配置文件。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;将访问iOS Dev Center下载，续订或生成&lt;code class=&quot;highlighter-rouge&quot;&gt;.mobileprovision&lt;/code&gt;文件。它使用&lt;a href=&quot;https://spaceship.airforce/&quot;&gt;Spaceship&lt;/a&gt;与Apple的Web服务进行通信。&lt;/p&gt;

&lt;h4 id=&quot;构建应用&quot;&gt;构建应用&lt;/h4&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;来构建和打包iOS App，它可以处理繁重的工作，并且轻松生成签名ipa和app文件&lt;/p&gt;

&lt;h5 id=&quot;基础用法&quot;&gt;基础用法&lt;/h5&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane gym
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;设置参数进行构建&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane gym --workspace &quot;Example.xcworkspace&quot; --scheme &quot;AppName&quot; --clean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果您需要使用其他Xcode安装，请使用xcode-select或定义DEVELOPER_DIR：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DEVELOPER_DIR=&quot;/Applications/Xcode6.2.app&quot; fastlane gym
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果需要上传到App Store或TestFlight，设置&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;的导出方法：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane gym --export_method ad-hoc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;传递布尔参数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane gym --include_bitcode true --include_symbols false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;需要&lt;code class=&quot;highlighter-rouge&quot;&gt;xcodebuild&lt;/code&gt;原始日志信息，打开&lt;code class=&quot;highlighter-rouge&quot;&gt;~/Library/Logs/gym&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;自动化构建流程&quot;&gt;自动化构建流程&lt;/h5&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  scan
  gym(scheme: &quot;MyApp&quot;)
  crashlytics
end

# error block is executed when a error occurs
error do |lane, exception|
  slack(
    # message with short human friendly message
    message: exception.to_s, 
    success: false, 
    # Output containing extended log output
    payload: { &quot;Output&quot; =&amp;gt; exception.error_info.to_s } 
  )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;当&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;引发错误时，&lt;code class=&quot;highlighter-rouge&quot;&gt;error_info&lt;/code&gt;属性将包含进程输出，让你可以在第三方工具（如Slack）中显示错误。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#gym参数&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后，你可以轻松地公测提供商之间进行切换（例如testflight，hockey，s3和更多）。&lt;/p&gt;

&lt;h4 id=&quot;上传应用到分发平台&quot;&gt;上传应用到分发平台&lt;/h4&gt;

&lt;p&gt;构建应用程序后，就可以将它上传到你选择的Beta测试服务中。fastlane的优雅之处在于你可以轻松地切换测试提供商，甚至可以一次上传到多个测试提供商，没有任何额外的工作。&lt;/p&gt;

&lt;p&gt;你所要做的就是在使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;构建应用程序后，将你选择的Beta测试提供程序添加到&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  match(type: &quot;appstore&quot;)    # see code signing guide for more information
  gym(scheme: &quot;MyApp&quot;)
  pilot
  slack(message: &quot;Successfully distributed a new beta build&quot;)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;fastlane会自动将生成的&lt;code class=&quot;highlighter-rouge&quot;&gt;.ipa&lt;/code&gt;文件的信息从&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;传递给你选择的Beta测试提供程序。&lt;/p&gt;

&lt;p&gt;以下只列举几种常见的Beta测试服务，有关其他受支持的Beta测试服务的更多信息，请参阅&lt;a href=&quot;https://docs.fastlane.tools/actions/#beta&quot;&gt;“Beta”操作列表&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;testflight&quot;&gt;TestFlight&lt;/h5&gt;

&lt;p&gt;你可以使用fastlane轻松地将新版本上传到TestFlight（它是App Store Connect的一部分）。为此，只需testflight在构建应用程序后使用内置操作即可&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # ...
  gym
  pilot
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一些示例用例&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # ...
  gym

  # Variant 1: Provide a changelog to your build
  pilot(changelog: &quot;Add rocket emoji&quot;)

  # Variant 2: Skip the &quot;Waiting for processing&quot; of the binary
  #   While this will speed up your build, it will not distribute
  #   the binary to your tests, nor set a changelog
  pilot(skip_waiting_for_build_processing: true)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果你曾经&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane init&lt;/code&gt;设置过fastlane，那么你的Apple ID将存储在&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Appfile&lt;/code&gt;。你也可以使用覆盖用户名&lt;code class=&quot;highlighter-rouge&quot;&gt;pilot(username: &quot;bot@fastlane.tools&quot;)&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;使用fastlane，你还可以自动管理你的Beta版测试人员，查看&lt;a href=&quot;https://docs.fastlane.tools/actions/upload_to_testflight/&quot;&gt;其他可用操作&lt;/a&gt;。&lt;/p&gt;

&lt;h5 id=&quot;crashlytics-fabric-beta&quot;&gt;Crashlytics (Fabric Beta）&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # ...
  gym
  crashlytics(api_token: &quot;[insert_key_here]&quot;,
              build_secret: &quot;[insert_key_here]&quot;)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;要获取API令牌，请打开&lt;a href=&quot;https://www.fabric.io/settings/organizations&quot;&gt;组织设置页面&lt;/a&gt;，然后单击API密钥并构建机密链接。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/crashlytics/&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;crashlytics&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;firim&quot;&gt;fir.im&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
    gym
    firim(firim_api_token: &quot;427899702537eaadc5104ecbf5096d5c&quot;
      )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/whlsxl/firim/tree/master/fastlane-plugin-firim&quot;&gt;更多插件信息&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;蒲公英&quot;&gt;蒲公英&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
    gym
    pgyer(api_key: &quot;7f15xxxxxxxxxxxxxxxxxx141&quot;,
    user_key: &quot;4a5bcxxxxxxxxxxxxxxx3a9e&quot;
    )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shishirui/fastlane-plugin-pgyer&quot;&gt;更多插件信息&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;提交应用到app-store&quot;&gt;提交应用到App Store&lt;/h4&gt;

&lt;p&gt;构建应用程序后，就可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;deliver&lt;/code&gt;上传到App Store了&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane: release do
    match(type: &quot;appstore&quot;)  # see code signing guide for more information
    gym(scheme: &quot;MyApp&quot;)
    deliver                  # upload your app to App Store Connect
    slack(message: &quot;Successfully uploaded a new App Store build&quot;)    
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;设置参数调用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deliver(
  submit_for_review: true,
  force: true,
  metadata_path: &quot;./metadata&quot;
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/upload_to_app_store/&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;deliver&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;扩展使用&quot;&gt;扩展使用&lt;/h2&gt;

&lt;h3 id=&quot;插件&quot;&gt;插件&lt;/h3&gt;

&lt;p&gt;fastlane的插件系统是官方支持用户开发的开放平台，你可以根据你的需求自定义开发不同的插件，并在fastlane中使用。&lt;/p&gt;

&lt;h4 id=&quot;寻找一个插件&quot;&gt;寻找一个插件&lt;/h4&gt;

&lt;p&gt;列出所有可用的插件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane search_plugins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;搜索特定的插件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane search_plugins [query]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;在项目中添加插件&quot;&gt;在项目中添加插件&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane add_plugin [name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;运行此命令后，fastlane会帮你对项目进行设置以开始使用插件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;添加插件配置文件&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Pluginfile&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;确保&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Pluginfile&lt;/code&gt;的身份正确引用&lt;code class=&quot;highlighter-rouge&quot;&gt;./Gemfile&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;运行&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane install_plugins&lt;/code&gt;以确保在本地计算机上安装了所有必需的依赖项（此步骤可能会要求你输入管理员密码以安装Ruby gem）&lt;/li&gt;
  &lt;li&gt;你将有3个新文件，这些文件都应该添加到版本控制中：&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Pluginfile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;在新机器上同步插件&quot;&gt;在新机器上同步插件&lt;/h4&gt;

&lt;p&gt;要确保所有插件都安装在本地计算机上，请运行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane install_plugins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;删除插件&quot;&gt;删除插件&lt;/h4&gt;

&lt;p&gt;打开&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Pluginfile&lt;/code&gt;文件，并删除文件中像这样的配置项：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &quot;fastlane-plugin-[plugin_name]&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;appfile&quot;&gt;Appfile&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Appfile&lt;/code&gt;必须存储在&lt;code class=&quot;highlighter-rouge&quot;&gt;./fastlane&lt;/code&gt;目录中。&lt;/p&gt;

&lt;p&gt;默认情况下的&lt;code class=&quot;highlighter-rouge&quot;&gt;Appfile&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app_identifier &quot;net.sunapps.1&quot; # The bundle identifier of your app
apple_id &quot;felix@krausefx.com&quot;  # Your Apple email address

# You can uncomment the lines below and add your own
# team selection in case you're in multiple teams
# team_name &quot;Felix Krause&quot;
# team_id &quot;Q2CBPJ58CA&quot;

# To select a team for App Store Connect use
# itc_team_name &quot;Company Name&quot;
# itc_team_id &quot;18742801&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果你的App Store Connect和Apple Developer账号不相同，使用以下代码配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app_identifier &quot;tools.fastlane.app&quot;       # The bundle identifier of your app

apple_dev_portal_id &quot;portal@company.com&quot;  # Apple Developer Account
itunes_connect_id &quot;tunes@company.com&quot;     # App Store Connect Account

team_id &quot;Q2CBPJ58CA&quot; # Developer Portal Team ID
itc_team_id &quot;18742801&quot; # App Store Connect Team ID
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果你的项目每个环境都具有不同的包标识符（即beta，app store），则可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;for_platform&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;for_lane&lt;/code&gt;块声明来定义它。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app_identifier &quot;net.sunapps.1&quot;
apple_id &quot;felix@krausefx.com&quot;
team_id &quot;Q2CBPJ58CC&quot;

for_platform :ios do
  team_id '123' # for all iOS related things
  for_lane :test do
    app_identifier 'com.app.test'
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;在fastlane中使用appfile中的配置&quot;&gt;在fastlane中使用Appfile中的配置&lt;/h4&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;Fastfile&lt;/code&gt;中访问这些配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;使用gemfile进行依赖管理&quot;&gt;使用Gemfile进行依赖管理&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;明确定义使用的fastlane版本和依赖关系，并且能让fastlane使用更迅速。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;在项目的根目录创建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;文件&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  source &quot;https://rubygems.org&quot;
  gem &quot;fastlane&quot; 
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;运行&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo bundle update&lt;/code&gt;同时添加&lt;code class=&quot;highlighter-rouge&quot;&gt;./Gemfile&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;./Gemfile.lock&lt;/code&gt;版本控制文件&lt;/li&gt;
  &lt;li&gt;每次运行fastlane时，请使用&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec fastlane [lane]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在CI上，添加&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo bundle install&lt;/code&gt;作为第一个构建步骤&lt;/li&gt;
  &lt;li&gt;要更新fastlane，请运行&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo bundle update fastlane&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pem推送证书&quot;&gt;pem推送证书&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pem&lt;/code&gt;执行的文件操作&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-12-PEMRecording.gif&quot; alt=&quot;PEMRecording&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;命令会执行如下操作：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建新的签名请求&lt;/li&gt;
  &lt;li&gt;创建新的推送认证&lt;/li&gt;
  &lt;li&gt;下载证书&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.pem&lt;/code&gt;在当前工作目录中生成一个新文件，你可以将其上传到服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;请注意，pem永远不会撤销你现有的证书。pem无法下载任何现有的推送证书，因为私钥仅在其创建的计算机上可用。&lt;/p&gt;

&lt;p&gt;如果你已启用推送证书，该证书至少有30天有效，则pem不会创建新证书。如果你仍想创建一个，请使用force：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem --force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;你可以传递这样的参数：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem -a com.krausefx.app -u username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果要生成开发证书，请执行以下操作：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem --development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;为你的p12文件设置密码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem -p &quot;MyPass&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;你可以为输出文件指定名称：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem -o my.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pem(
  force: true, # create a new profile, even if the old one is still valid
  app_identifier: &quot;net.sunapps.9&quot;, # optional app identifier,
  save_private_key: true,
  new_profile: proc do |profile_path| # this block gets called when a new profile was generated
    puts profile_path # the absolute path to the new PEM file
    # insert the code to upload the PEM file to the server
  end
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#pem参数&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;pem&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;增加内部版本号&quot;&gt;增加内部版本号&lt;/h3&gt;

&lt;p&gt;在TestFlight和App Store中，每次上传新版本时都必须增加内部版本号。&lt;/p&gt;

&lt;h4 id=&quot;beta内部版本号&quot;&gt;Beta内部版本号&lt;/h4&gt;
&lt;p&gt;下面的代码示例将使用TestFlight中的最新版本号并临时设置它。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  increment_build_number(
    build_number: latest_testflight_build_number + 1,
    xcodeproj: &quot;Example.xcodeproj&quot;
  )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;将构建号提交给版本控制&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # Ensure that your git status is not dirty
  ensure_git_status_clean

  # Increment the build number (not the version number)
  # Providing the xcodeproj is optional
  increment_build_number(xcodeproj: &quot;Example.xcodeproj&quot;)

  # Commit the version bump
  commit_version_bump(xcodeproj: &quot;Example.xcodeproj&quot;)

  # Add a git tag for this build. This will automatically
  # use an appropriate git tag name
  add_git_tag

  # Push the new commit and tag back to your git remote
  push_to_git_remote
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;app-store内部版本号&quot;&gt;App Store内部版本号&lt;/h4&gt;

&lt;p&gt;下面的代码示例将使用App Store Connect中的最新版本号并临时设置它。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  increment_build_number(
    build_number: app_store_build_number + 1,
    xcodeproj: &quot;Example.xcodeproj&quot;
  )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;第三方beta测试服务&quot;&gt;第三方Beta测试服务&lt;/h3&gt;

&lt;p&gt;如果你不是使用TestFlight作为测试服务，则需要管理已注册的设备及其UDID。fastlane已经支持设备注册和更新配置文件。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # Before calling match, we make sure all our devices are registered on the Apple Developer Portal
  register_devices(devices_file: &quot;devices.txt&quot;)

  # After registering the new devices, we'll make sure to update the provisioning profile if necessary
  # Note how we make sure to pass &quot;adhoc&quot; to get and use a provisioning profile for Ad Hoc distribution
  sync_code_signing(force_for_new_devices: true, type: &quot;adhoc&quot;)
  build_app
  # ...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;devices.txt&lt;/code&gt;应该是这样的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Device ID Device Name
A123456789012345678901234567890123456789  DeviceName1
B123456789012345678901234567890123456789  DeviceName2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;参数表&quot;&gt;参数表&lt;/h2&gt;

&lt;h3 id=&quot;cert参数&quot;&gt;cert参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;development&lt;/td&gt;
      &lt;td&gt;创建开发证书而不是分发证书&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;force&lt;/td&gt;
      &lt;td&gt;即使存在现有证书，也要创建证书&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;username&lt;/td&gt;
      &lt;td&gt;您的Apple ID用户名&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_id&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的ID&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_name&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的名称&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;filename&lt;/td&gt;
      &lt;td&gt;要存储的证书的文件名&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_path&lt;/td&gt;
      &lt;td&gt;应存储所有证书和私钥的目录的路径&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keychain_path&lt;/td&gt;
      &lt;td&gt;自定义钥匙串的路径&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keychain_password&lt;/td&gt;
      &lt;td&gt;首次访问新mac上的证书时可能需要这样做。对于登录/默认钥匙串，这是您的帐户密码&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;platform&lt;/td&gt;
      &lt;td&gt;设置配置文件的平台（ios，macos）&lt;/td&gt;
      &lt;td&gt;ios&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sigh参数&quot;&gt;sigh参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;adhoc&lt;/td&gt;
      &lt;td&gt;设置此标志将生成AdHoc配置文件而不是App Store配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;development&lt;/td&gt;
      &lt;td&gt;更新开发证书而不是生产证书&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_install&lt;/td&gt;
      &lt;td&gt;默认情况下，证书将添加到本地计算机。设置此标志将跳过此操作&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;force&lt;/td&gt;
      &lt;td&gt;无论状态如何，都可以续订配置文件 - 自动为临时配置文件添加所有设备&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;app_identifier&lt;/td&gt;
      &lt;td&gt;您应用的捆绑包标识符&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;username&lt;/td&gt;
      &lt;td&gt;您的Apple ID用户名&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_id&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的ID&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_name&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的名称&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;provisioning_name&lt;/td&gt;
      &lt;td&gt;Apple Developer Portal上使用的配置文件的名称&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ignore_profiles_with_different_name&lt;/td&gt;
      &lt;td&gt;与：provisioning_name结合使用 - 当为true时，仅下载与此确切名称匹配的配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_path&lt;/td&gt;
      &lt;td&gt;应存储配置文件的目录&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cert_id&lt;/td&gt;
      &lt;td&gt;要使用的代码签名证书的ID（例如78ADL6LVAA）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cert_owner_name&lt;/td&gt;
      &lt;td&gt;用于新配置文件或续订的证书名称。（例如“Felix Krause”）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;filename&lt;/td&gt;
      &lt;td&gt;用于生成的配置文件的文件名（必须包含.mobileprovision）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_fetch_profiles&lt;/td&gt;
      &lt;td&gt;跳过现有配置文件的验证，如果您有数千个配置文件，这将非常有用&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_certificate_verification&lt;/td&gt;
      &lt;td&gt;跳过每个现有配置文件的证书验证。这将确保可以在本地计算机上使用配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;platform&lt;/td&gt;
      &lt;td&gt;设置配置文件的平台（即ios，tvos）&lt;/td&gt;
      &lt;td&gt;ios&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;readonly&lt;/td&gt;
      &lt;td&gt;仅获取现有配置文件，不生成新配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;template_name&lt;/td&gt;
      &lt;td&gt;配置文件模板的名称。如果开发者帐户具有配置配置文件模板（又名：自定义权利），则可以通过在创建/编辑配置文件时检查权利下拉列表来找到模板名称（例如“Apple Pay Pass Suppression Development”）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;gym参数&quot;&gt;gym参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;workspace&lt;/td&gt;
      &lt;td&gt;工作区文件的路径&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;project&lt;/td&gt;
      &lt;td&gt;项目文件的路径&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;scheme&lt;/td&gt;
      &lt;td&gt;该项目的scheme。确保它标记为Shared&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;clean&lt;/td&gt;
      &lt;td&gt;项目在建造之前是否应该进行Clean？&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_directory&lt;/td&gt;
      &lt;td&gt;应存储ipa文件的目录&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_name&lt;/td&gt;
      &lt;td&gt;生成的ipa文件的名称&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;configuration&lt;/td&gt;
      &lt;td&gt;构建应用程序时使用的配置。默认为’Release’&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;silent&lt;/td&gt;
      &lt;td&gt;隐藏构建时不必要的所有信息&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;codesigning_identity&lt;/td&gt;
      &lt;td&gt;要使用的代码签名标识的名称。它必须与名称完全匹配。例如’iPhone Distribution：SunApps GmbH’&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_package_ipa&lt;/td&gt;
      &lt;td&gt;我们应该跳过包装ipa吗？&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;include_symbols&lt;/td&gt;
      &lt;td&gt;ipa文件应该包含符号吗？&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;include_bitcode&lt;/td&gt;
      &lt;td&gt;ipa文件应该包含bitcode吗？&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;export_method&lt;/td&gt;
      &lt;td&gt;用于导出存档的方法。有效值包括：app-store，ad-hoc，package，enterprise，development，developer-id&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;export_options&lt;/td&gt;
      &lt;td&gt;导出选项plist的路径或带导出选项的哈希。使用’xcodebuild -help’打印全套可用选项&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;export_xcargs&lt;/td&gt;
      &lt;td&gt;将附加参数传递给xcodebuild以获取包阶段。请务必引用设置名称和值，例如OTHER_LDFLAGS =“ - ObjC -lstdc ++”&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_build_archive&lt;/td&gt;
      &lt;td&gt;从以前构建的xarchive导出ipa。使用archive_path作为源&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_archive&lt;/td&gt;
      &lt;td&gt;构建之后，不要归档，实际上不包括-archivePath参数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;build_path&lt;/td&gt;
      &lt;td&gt;存档应存储在的目录&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;archive_path&lt;/td&gt;
      &lt;td&gt;创建存档的路径&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;derived_data_path&lt;/td&gt;
      &lt;td&gt;构建产品和其他派生数据的目录&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;result_bundle&lt;/td&gt;
      &lt;td&gt;是否应在输出目录中生成Xcode结果包&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;buildlog_path&lt;/td&gt;
      &lt;td&gt;存储构建日志的目录&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sdk&lt;/td&gt;
      &lt;td&gt;应该用于构建应用程序的SDK&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toolchain&lt;/td&gt;
      &lt;td&gt;应该用于构建应用程序的工具链（例如com.apple.dt.toolchain.Swift_2_3,org.swift.30p620160816a）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;destination&lt;/td&gt;
      &lt;td&gt;使用自定义目标构建应用程序&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;export_team_id&lt;/td&gt;
      &lt;td&gt;可选：有时您需要在导出ipa文件时指定团队ID&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcargs&lt;/td&gt;
      &lt;td&gt;将其他参数传递给xcodebuild以进行构建阶段。请务必引用设置名称和值，例如OTHER_LDFLAGS =“ - ObjC -lstdc ++”&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcconfig&lt;/td&gt;
      &lt;td&gt;使用额外的XCCONFIG文件来构建您的应用程序&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;suppress_xcode_output&lt;/td&gt;
      &lt;td&gt;将xcodebuild的输出抑制为stdout。输出仍保存在buildlog_path中&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;disable_xcpretty&lt;/td&gt;
      &lt;td&gt;禁用构建输出的xcpretty格式&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_test_format&lt;/td&gt;
      &lt;td&gt;使用测试（RSpec样式）格式进行构建输出&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_formatter&lt;/td&gt;
      &lt;td&gt;要使用的自定义xcpretty格式化程序&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_report_junit&lt;/td&gt;
      &lt;td&gt;让xcpretty在提供的路径上创建一个JUnit样式的XML报告&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_report_html&lt;/td&gt;
      &lt;td&gt;让xcpretty在提供的路径上创建一个简单的HTML报告&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_report_json&lt;/td&gt;
      &lt;td&gt;让xcpretty在提供的路径上创建JSON编译数据库&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;analyze_build_time&lt;/td&gt;
      &lt;td&gt;分析项目构建时间并将输出存储在’culprits.txt’文件中&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_utf&lt;/td&gt;
      &lt;td&gt;报告构建时，xcpretty使用unicode编码&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_profile_detection&lt;/td&gt;
      &lt;td&gt;不要尝试从xcodeproj构建配置文件映射。应使用匹配或手动提供的映射&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;pem参数&quot;&gt;pem参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;development&lt;/td&gt;
      &lt;td&gt;更新开发推送证书而不是生产证书&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;generate_p12&lt;/td&gt;
      &lt;td&gt;另外为PEM文件生成p12文件&lt;/td&gt;
      &lt;td&gt;true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;active_days_limit&lt;/td&gt;
      &lt;td&gt;如果当前证书的有效期少于此天数，则生成一个新证书&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;force&lt;/td&gt;
      &lt;td&gt;创建一个新的推送证书，即使当前的证书有效30天（或PEM_ACTIVE_DAYS_LIMIT）更多天&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;save_private_key&lt;/td&gt;
      &lt;td&gt;设置为保存私有RSA密钥&lt;/td&gt;
      &lt;td&gt;true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;app_identifier&lt;/td&gt;
      &lt;td&gt;您应用的捆绑包标识符&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;username&lt;/td&gt;
      &lt;td&gt;您的Apple ID用户名&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_id&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的ID&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_name&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的名称&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;p12_password&lt;/td&gt;
      &lt;td&gt;用于p12文件的密码&lt;/td&gt;
      &lt;td&gt;’’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pem_name&lt;/td&gt;
      &lt;td&gt;生成的.pem文件的文件名&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_path&lt;/td&gt;
      &lt;td&gt;应存储所有证书和私钥的目录的路径&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;new_profile&lt;/td&gt;
      &lt;td&gt;如果有新的配置文件，则调用阻止&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/getting-started/ios/setup/&quot;&gt;设置fastlane&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/plugins/create-plugin/#fastlane-plugins&quot;&gt;fastlane插件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/advanced/Appfile/&quot;&gt;Appfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/sigh/&quot;&gt;sigh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/cert/&quot;&gt;cert&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/gym/&quot;&gt;gym&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/getting-started/ios/beta-deployment/&quot;&gt;iOS Beta Deployment using fastlane&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/pilot/&quot;&gt;pilot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/crashlytics/&quot;&gt;crashlytics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://try.crashlytics.com/beta/&quot;&gt;Crashlytics Beta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/boarding#readme&quot;&gt;boarding&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/upload_to_app_store/&quot;&gt;deliver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 12 Sep 2018 08:21:47 +0800</pubDate>
        <link>http://zrocky.com/2018/09/fastlane/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/09/fastlane/</guid>
        
        <category>Fastlane</category>
        
        
        <category>iOS</category>
        
      </item>
    
  </channel>
</rss>
