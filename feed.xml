<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zrocky</title>
    <description>Think Different</description>
    <link>http://zrocky.com/</link>
    <atom:link href="http://zrocky.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 17 Apr 2019 16:16:32 +0800</pubDate>
    <lastBuildDate>Wed, 17 Apr 2019 16:16:32 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>首例免疫艾滋病基因编辑婴儿</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;351年前的冬天，一位法国医生完成了一例给人输血的手术，用的是牛血。&lt;/p&gt;

  &lt;p&gt;病人死了。&lt;/p&gt;

  &lt;p&gt;这个医生名叫让-巴蒂斯特·德尼。此前他已经给两人输了一点羊羔的血，两人都活了下来。大受鼓舞的德尼从巴黎的街上绑架了一个疯子，拿绳子捆起来强迫他接受输血“治疗”，不料这个疯子出现了明显的不良反应；德尼不肯放弃，第三次输血之后疯子死了。&lt;/p&gt;

  &lt;p&gt;事情闹上了法庭。出乎众人意料的是，德尼没有因为杀人而上绞刑架。法庭发现这个疯子并非死于输血，而是死于砷中毒。&lt;/p&gt;

  &lt;p&gt;德尼自己不可能给患者下毒，患者死了实验就失败了，肯定另有其人。证据指向的下毒者，竟然是疯子的遗孀。可她贫困潦倒地照顾了自己的疯丈夫这么多年，既没有动机也没有财力去买砒霜，怎么会做出这样的事情呢？&lt;/p&gt;

  &lt;p&gt;她在庭上供认说，她得到了一群人的指使。这些人私下登门拜访，说如果能毒死她丈夫并把罪责怪给输血，就能得到一大笔钱。&lt;/p&gt;

  &lt;p&gt;换言之，是反对输血的人杀死了患者。&lt;/p&gt;

  &lt;p&gt;————————————————&lt;/p&gt;

  &lt;p&gt;毫无疑问，德尼的行为是彻头彻尾的草菅人命，为了出名不管试验品的死活。1667年人们对血液的生化特征一无所知，没有人听说过血型和排异反应，也没有任何依据表明输血能治疯病。输血技术连动物实验也没做过几次，安全证据基本为零。“患者”是一个疯子，没有能力理解实验后果也没有得到丝毫告知。他却要一步登天，搞一个技术粗糙、经验不足、缺乏研究、没有好处、风险巨大、违反病人意愿的人体手术。哪怕当时，也有无数的理由来反对他，提起诉讼，让他接受法律制裁。&lt;/p&gt;

  &lt;p&gt;然而当时人们反对输血，不是因为技术不够成熟，不是因为违背病人意愿，也不是因为违反行业规章。他们选择的是一个更加疯狂的立场。&lt;/p&gt;

  &lt;p&gt;他们说，这样会产生危险的人类动物杂种，会侵害人之为人的本质灵魂，会让魔鬼降临于世。输了狗血的人难道不会半夜里忍不住嚎叫？携带羊血的人难道不会子孙后代都生下半羊人？&lt;/p&gt;

  &lt;p&gt;所以，为了“人类利益”，先把病人杀掉，再嫁祸于人，彻底埋葬这一切。&lt;/p&gt;

  &lt;p&gt;嫁祸没有成功，但他们的目的达到了。法庭下令没有巴黎医学会的明确批准不可开展任何输血，而巴黎医学会甚至连血液循环理论都反对，更别提输血了。就这样，输血研究中止了整整一百五十年。&lt;/p&gt;

  &lt;p&gt;今天我们回顾过去，多半只会嘲笑一下十七世纪法国人的迷信。但这迷信是有后果的：它以虚无缥缈的、并非基于事实的“人类利益”为名，不但忽视了眼前真实发生的具体伦理危机和德尼医生造成的具体侵害，反而导致无辜的受害者丧命，并在未来很长时间里阻止了相关技术继续发展治病救人。二十多年后，列文虎克就将在显微镜下观测到血细胞；后续研究者进一步观测到凝血现象，并开发出一套原始血型理论指导治疗，这并非无法想象的事情。在我们的时间线里，这些都只能停留在想象中了。&lt;/p&gt;

  &lt;p&gt;不过毕竟当局者迷，身处时代风暴核心的时候，人们很难看清楚自己究竟站在哪里。&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qswmnj208p2p812m.jpg&quot; alt=&quot;62531fffgy1fxp51qswmnj208p2p812&quot; /&gt;
&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qqhybj21520c2taa.jpg&quot; alt=&quot;62531fffgy1fxp51qqhybj21520c2taa&quot; /&gt;
&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qq7boj210y0baabr.jpg&quot; alt=&quot;62531fffgy1fxp51qq7boj210y0baab&quot; /&gt;
&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qngczj20w602q3yv.jpg&quot; alt=&quot;62531fffgy1fxp51qngczj20w602q3yv&quot; /&gt;
&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qng0bj20g101c74b.jpg&quot; alt=&quot;62531fffgy1fxp51qng0bj20g101c74b&quot; /&gt;
&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qnd35j20t202omxg.jpg&quot; alt=&quot;62531fffgy1fxp51qnd35j20t202omxg&quot; /&gt;
&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qniwej20jr02jaa6.jpg&quot; alt=&quot;62531fffgy1fxp51qniwej20jr02jaa6&quot; /&gt;
&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qo8nxj20se02qjs1.jpg&quot; alt=&quot;62531fffgy1fxp51qo8nxj20se02qjs1&quot; /&gt;
&lt;img src=&quot;/../assets/images/post/62531fffgy1fxp51qng61j20em028t8n.jpg&quot; alt=&quot;62531fffgy1fxp51qng61j20em028t8n&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;引用自：&lt;a href=&quot;https://weibo.com/1649614847/H4VSCFPbP?type=comment#_rnd1543547737652&quot;&gt;Ent_evo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为在看《自私的基因》一书，开始思考最近闹得沸沸扬扬的基因编辑婴儿事件，出现的杀死婴儿的声音，恰巧契合了基因的利己性。&lt;/p&gt;

&lt;p&gt;一个强大的基因诞生，势必会影响其它基因的传承，优质基因得到保存，而不能适应环境的基因，最终将被淘汰，从劣势基因的立场看，此时将产生优质基因的个体杀死，阻断优质基因的延续，是最利己的行为。&lt;/p&gt;

</description>
        <pubDate>Fri, 30 Nov 2018 11:18:31 +0800</pubDate>
        <link>http://zrocky.com/2018/11/social181130/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/11/social181130/</guid>
        
        <category>Social</category>
        
        
        <category>Social</category>
        
      </item>
    
      <item>
        <title>使用Git进行版本控制</title>
        <description>&lt;p&gt;公司一直在使用SVN来做版本控制，虽然个人项目早已换成Git，但是对Git没有一个深入的了解，最近因为分支和标签用法的困惑，继而产生想系统学习Git使用的想法，本文是基于&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot;&gt;廖雪峰Git教程&lt;/a&gt;而整理的学习笔记。&lt;/p&gt;

&lt;h2 id=&quot;git概念&quot;&gt;Git概念&lt;/h2&gt;

&lt;h3 id=&quot;版本库和工作区&quot;&gt;版本库和工作区&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393197926757.jpg&quot; alt=&quot;版本库和工作区&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;是Git自动创建的第一个分支&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Git&lt;/code&gt;工作分为两步&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;把文件修改添加到暂存区
 &lt;img src=&quot;/../assets/images/post/2018-10-12-15393198237337.jpg&quot; alt=&quot;git add&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;把暂存区的所有内容提交到当前分支
 &lt;img src=&quot;/../assets/images/post/2018-10-12-15393198436289.jpg&quot; alt=&quot;git commit&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;git协议&quot;&gt;Git协议&lt;/h3&gt;

&lt;p&gt;Git支持多种协议，&lt;code class=&quot;highlighter-rouge&quot;&gt;git://&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt;等，&lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt;协议速度会慢一些&lt;/p&gt;

&lt;h3 id=&quot;专有名词&quot;&gt;专有名词&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;git自动创建的第一个分支&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;当前版本&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;远程库&lt;/p&gt;

&lt;h2 id=&quot;基础命令&quot;&gt;基础命令&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在目录中初始化Git&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git init
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将修改添加到Git&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # 添加全部改动（常用）
 git add .

 # 添加具体变动
 git add file1 file2
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将修改提交&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git commit -m &quot;changelog&quot;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看仓库当前状态&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git status
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看文件修改内容&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git diff filename
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看Git日志&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # 完整日志（带时间）
 git log
    
 #精简日志
 git log --pretty=oneline
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将当前版本回退（切换）到具体版本&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # 回退到具体版本号（版本号不需要写全，只需前几位）
 git reset --hard commit_id
    
 # 回退到当前版本的上一版本
 git reset --hard HEAD^
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;HEAD表示当前版本
上一个版本就是HEAD\^
上上一个版本就是HEAD\^\^
当然往上100个版本写100个\^比较容易数不过来，所以写成HEAD~100&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;查看历史命令（历史版本号）&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git reflog
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;撤销工作区中的修改（使用版本库中的版本替换工作区版本）&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # “--”很重要，不然会和checkout命令冲突
 git checkout -- filename
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;一种是file自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；&lt;/li&gt;
    &lt;li&gt;一种是file已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;撤销暂存区中的修改&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git reset HEAD filename
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将本地仓库添加到远程库中&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add origin git@github.com:zrocky/testgit.git
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将本地库中的内容推送到远程库上&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 首次push需添加-u参数
git push -u origin master
    
# 提交到远程库
git push origin master
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;从远程库中克隆到本地库&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:zrocky/testgit.git
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;分支与标签&quot;&gt;分支与标签&lt;/h2&gt;

&lt;h3 id=&quot;branch分支&quot;&gt;Branch（分支）&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;为主分支&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;指向当前分支&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393228460803.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;每次提交&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支都会向前移动一步&lt;/p&gt;
&lt;video controls=&quot;controls&quot; src=&quot;/../assets/images/post/master-branch-forward.mp4&quot; width=&quot;100%&quot;&gt;&lt;/video&gt;

&lt;p&gt;创建新的分支&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;，将&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;指向&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393233193864.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从现在开始，工作区的修改和提交就是针对&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支的了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393233502209.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;假如我们在&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;上的工作完成了，就可以把&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;合并到&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;上&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393233995876.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;合并完分支后，甚至可以删除&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支。删除&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支就是把&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;指针给删掉，删掉后，我们就剩下了一条&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393234395115.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;过程动画：&lt;/p&gt;
&lt;video controls=&quot;controls&quot; src=&quot;/../assets/images/post/master-and-dev-ff.mp4&quot; width=&quot;100%&quot;&gt;&lt;/video&gt;

&lt;h4 id=&quot;分支命令&quot;&gt;分支命令&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;创建分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git branch dev
    
 # 创建并切换分支
 git checkout -b dev
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;切换分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git checkout dev
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看当前分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git branch
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;合并分支到当前分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git merge dev
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;删除分支&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git branch -d dev
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;查看分支合并图&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git log --graph
    
 # 显示简化图
 git log --graph --pretty=oneline --abbrev-commit
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;分支合并冲突&quot;&gt;分支合并冲突&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393286280378.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此种情况需解决冲突再提交&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393287303720.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;分支策略&quot;&gt;分支策略&lt;/h4&gt;

&lt;p&gt;如果分支合并没有冲突等异常情况，Git会使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Fast forward（快进）&lt;/code&gt;模式，该模式下，删除分支后，会丢失分支信息&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;--no--ff&lt;/code&gt;参数禁用&lt;code class=&quot;highlighter-rouge&quot;&gt;Fast forward&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git merge --no-ff -m &quot;merge with no-ff&quot; dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-10-12-15393299601183.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;分支开发策略&quot;&gt;分支开发策略&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支是非常稳定的，也就是仅用来发布新版本，平时不在上面工作，开发都在&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支上，每个人再有自己的分支，按时向&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支合并即可，团队合作的分支看起来是这样的&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/15393300560209.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;bug处理分支&quot;&gt;bug处理分支&lt;/h5&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支工作，手头工作并未完成，不能提交，但是bug急修，这个时候，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;stash&lt;/code&gt;先将工作区暂时“储藏”起来，等修复bug后再恢复&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git stash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;假定为修复线上bug，可从&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支创建临时分支&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b issus-101
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;bug修复完成后，合并分支到&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;，再切换回&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;stash&lt;/code&gt;恢复之前的工作区&lt;/p&gt;

&lt;p&gt;查看&lt;code class=&quot;highlighter-rouge&quot;&gt;stash&lt;/code&gt;挂起的任务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git stash list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;恢复&lt;code class=&quot;highlighter-rouge&quot;&gt;stash&lt;/code&gt;任务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 只恢复任务，挂起的任务还在list中
git stash apply stash@{0}

# 恢复的同时把stash挂起任务删除
git stash pop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;删除&lt;code class=&quot;highlighter-rouge&quot;&gt;stash list&lt;/code&gt;中任务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git stash drop stash@{0}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;feature分支&quot;&gt;Feature分支&lt;/h5&gt;

&lt;p&gt;feature分支和bug分支的处理类似，但如果feature最终放弃，需要删除分支时，使用原来的分支将会报错，需要删除未合并的分支时，要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-D&lt;/code&gt;参数强行删除&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch -D feature-vulcan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;多人协作&quot;&gt;多人协作&lt;/h5&gt;

&lt;p&gt;查看远程库信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote

# 详细信息
git remote -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;推送分支到远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 主分支
git push origin master

# 开发分支
git push origin dev

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支为主分支，需要时刻与远程同步&lt;/li&gt;
    &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步&lt;/li&gt;
    &lt;li&gt;bug和feature则按需求决定是否同步到远程&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h6 id=&quot;抓取分支&quot;&gt;抓取分支&lt;/h6&gt;

&lt;p&gt;从远程库&lt;code class=&quot;highlighter-rouge&quot;&gt;clone&lt;/code&gt;到本地时，默认只能看到&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支，如果需要再&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;等其它分支上开发，则必须创建&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;远程库的&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;分支到本地&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b dev origin/dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果&lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt;更新到远程分支时发生冲突，则需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;命令从远程拉取更新，在本地处理完冲突后，再用&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin &amp;lt;branch-name&amp;gt;&lt;/code&gt;命令&lt;code class=&quot;highlighter-rouge&quot;&gt;push&lt;/code&gt;到远程库&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;如果&lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;命令提示&lt;code class=&quot;highlighter-rouge&quot;&gt;no tracking information&lt;/code&gt;，则说明本地分支和远程分支的链接关系没有创建，用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch --set-upstream-to &amp;lt;branch-name&amp;gt; origin/&amp;lt;branch-name&amp;gt;&lt;/code&gt;解决&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;rebase变基&quot;&gt;Rebase（变基）&lt;/h5&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;rebase&lt;/code&gt;可以整理本地&lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt;的分叉，使之变成线性，而不再是“蜘蛛网”，&lt;code class=&quot;highlighter-rouge&quot;&gt;rebase&lt;/code&gt;只对尚未推送或分享给别人的本地修改执行变基操作清理历史，从不对已推送至别处的提交执行变基操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git rebase
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;tag-标签&quot;&gt;Tag (标签）&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt;是版本库的一个快照，和&lt;code class=&quot;highlighter-rouge&quot;&gt;branch&lt;/code&gt;相似，但是不能像&lt;code class=&quot;highlighter-rouge&quot;&gt;branch&lt;/code&gt;一样移动&lt;/p&gt;

&lt;p&gt;基于当前分支创建新标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag v1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;基于特定版本创建新标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag v0.9 f52c633

# 指定说明文字
git tag -a v0.1 -m &quot;version 0.1 released&quot; 1094adb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;查看所有标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;查看某个标签的信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git show v0.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;推送标签到远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push origin v1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;推送全部标签到远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push origin --tags
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;删除本地标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag -d v0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;删除远程标签&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 先在本地删除
git tag -d v0.9

# 远程删除
git push origin :refs/tags/v0.9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;git高级&quot;&gt;Git高级&lt;/h2&gt;

&lt;h3 id=&quot;远程库操作&quot;&gt;远程库操作&lt;/h3&gt;

&lt;p&gt;删除远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote rm origin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;只删除了关联关系，并未删除远程数据&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;添加多个远程库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add bitbucket git@bitbucket.org:Zrocky/git_test.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;只需在push时，选择相应的远程库即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;修改远程库名称&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote rename oldname newname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;忽略文件&quot;&gt;忽略文件&lt;/h3&gt;

&lt;p&gt;有一些文件你不想上传至git仓库中，这个时候可以使用忽略功能，将需要忽略的文件标示给git。&lt;/p&gt;

&lt;p&gt;首先在Git工作区的根目录创建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;文件，把需要忽略的文件名填写进去，git就会自动忽略这些文件。GitHub创建了一些可供参考的预设文件，我们可以直接拿来修改使用:&lt;a href=&quot;https://github.com/github/gitignore&quot;&gt;gitignore&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;忽略文件的原则是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;忽略操作系统自动生成的文件，比如缩略图等；&lt;/li&gt;
  &lt;li&gt;忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；&lt;/li&gt;
  &lt;li&gt;忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;搭建git服务器&quot;&gt;搭建Git服务器&lt;/h3&gt;

&lt;p&gt;搭建Git服务器，需要准备一台运行Linux的机器，推荐使用Ubuntu或Debian&lt;/p&gt;

&lt;p&gt;第一步，安装&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第二步，创建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;用户，用来运行&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;服务：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo adduser git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第三步，创建证书登录&lt;/p&gt;

&lt;p&gt;收集所有需要登录的用户的公钥，就是他们自己的id_rsa.pub文件，把所有公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。&lt;/p&gt;

&lt;p&gt;第四部，初始化Git仓库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo git init --bare sample.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Git就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。然后，把owner改为git：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown -R git:git sample.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第五步，禁用shell登录&lt;/p&gt;

&lt;p&gt;出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过编辑/etc/passwd文件完成。找到类似下面的一行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git:x:1001:1001:,,,:/home/git:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;改为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第六步，克隆远程仓库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@server:/srv/sample.git 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;管理公钥&quot;&gt;管理公钥&lt;/h4&gt;

&lt;p&gt;如果团队成员比较多，可以使用&lt;a href=&quot;https://github.com/res0nat0r/gitosis&quot;&gt;Gitosis&lt;/a&gt;管理公钥&lt;/p&gt;

&lt;h4 id=&quot;管理权限&quot;&gt;管理权限&lt;/h4&gt;

&lt;p&gt;Git本身不支持权限控制，不过Git支持hook，所有可以在服务器端编写脚本实现权限控制，使用&lt;a href=&quot;https://github.com/sitaramc/gitolite&quot;&gt;Gitolite&lt;/a&gt;可以实现这个功能&lt;/p&gt;

</description>
        <pubDate>Mon, 15 Oct 2018 22:26:19 +0800</pubDate>
        <link>http://zrocky.com/2018/10/how-to-use-git/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/10/how-to-use-git/</guid>
        
        <category>Git</category>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>使用fastlane自动部署iOS App</title>
        <description>&lt;p&gt;fastlane是为iOS和Android应用程序自动执行beta部署和发布的最简单方法。它处理所有繁琐的任务，例如生成屏幕截图，处理代码签名和发布应用程序。&lt;/p&gt;

&lt;h2 id=&quot;基本使用&quot;&gt;基本使用&lt;/h2&gt;

&lt;h3 id=&quot;安装fastlane&quot;&gt;安装fastlane&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装最新的Xcode命令行工具&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; xcode-select --install
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装fastlane（可以使用RubyGems或Homebrew安装）&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Using RubyGems
 sudo gem install fastlane -NV
    
 # Alternatively using Homebrew
 brew cask install fastlane
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;初始化fastlane&quot;&gt;初始化fastlane&lt;/h3&gt;

&lt;p&gt;在Shell中，切换到项目目录并运行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-11-15366328908637.jpg&quot; alt=&quot;fastlane_init&quot; /&gt;&lt;/p&gt;

&lt;p&gt;fastlane提供了几种默认的配置，可以根据实际需求选择，期间可能会要求输入一些配置信息，根据提示输入即可。&lt;/p&gt;

&lt;p&gt;根据你选择的配置，会生成不同的配置文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-11-15366335231432.jpg&quot; alt=&quot;fastlane_file&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Fastfile&lt;/code&gt;包含了发布应用程序所需的所有信息。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Appfile&lt;/code&gt;包含了fastlane工具中使用的基本配置信息（如Apple ID、Bundle identifier等），这些信息可以让你更快地部署&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;。&lt;a href=&quot;#Appfile&quot;&gt;更多&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;./Gemfile&lt;/code&gt;存储了fastlane所需的依赖条件。&lt;a href=&quot;#使用Gemfile进行依赖管理&quot;&gt;更多&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;使用fastlane发布ios-app&quot;&gt;使用fastlane发布iOS App&lt;/h3&gt;

&lt;p&gt;一个App的发布流程，大致分为&lt;code class=&quot;highlighter-rouge&quot;&gt;代码签名&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;应用构建&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;发布&lt;/code&gt;几个步骤，以下将详细介绍每个步骤&lt;/p&gt;

&lt;h4 id=&quot;初识lane&quot;&gt;初识lane&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Fastlane&lt;/code&gt;文件中默认配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;default_platform(:ios)

platform :ios do
  desc &quot;Description of what the lane does&quot;
  lane :custom_lane do
    # do something
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;每个&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;即一个流程，可在这里配置例如Beta部署或发布App Store的操作。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;platform&lt;/code&gt;表示&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;所运行的平台&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中，我们可以使用fastlane创建的&lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt;，或者第三方的插件来实现我们所需要的操作。&lt;/p&gt;

&lt;p&gt;在Shell中切换到项目根目录，使用以下方法执行&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane custom_lane
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;代码签名&quot;&gt;代码签名&lt;/h4&gt;

&lt;p&gt;如果你不熟悉代码前面，请查看&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/401/&quot;&gt;Xcode代码签名基础知识的WWDC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这里使用的&lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt;均为自动设置代码签名，如果你已经手动设置好了，且不需要fastlane为你做此项配置，可直接跳到&lt;a href=&quot;#构建应用&quot;&gt;下一步骤&lt;/a&gt;。&lt;/p&gt;

&lt;h5 id=&quot;match&quot;&gt;match&lt;/h5&gt;

&lt;p&gt;通过使用&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;，可以将私钥和证书存储在Git仓库中，以便跨机器同步它们。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;match(git_url: &quot;https://github.com/fastlane/certificates&quot;,
      type: &quot;adhoc&quot;,
      app_identifier: &quot;tools.fastlane.app&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;关于match的配置方法，我单独写了一篇文章介绍，推荐使用这种方法。&lt;a href=&quot;https://zrocky.com/2018/how-to-use-fastlane-match&quot;&gt;使用match同步证书和配置文件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;会要求您撤销现有证书&lt;/p&gt;

&lt;h5 id=&quot;cert和sigh&quot;&gt;cert和sigh&lt;/h5&gt;

&lt;p&gt;如果你不想撤销现有证书，但仍想使用自动设置，则可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;将确保你在本地计算机上安装了有效的证书及其私钥&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;将确保你在本地安装了与证书相匹配的有效配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane: beta do
    cert
    sigh(force: true)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;force: true&lt;/code&gt;将确保每次运行时重新生成配置文件。&lt;/p&gt;

&lt;h6 id=&quot;cert&quot;&gt;cert&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;将检查本地计算机上是否安装了任何可用的签名证书。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane cert
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;只有在需要创建新证书的时候，&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;才会&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建一个新的私钥&lt;/li&gt;
  &lt;li&gt;创建新的签名请求&lt;/li&gt;
  &lt;li&gt;生成、下载和安装证书&lt;/li&gt;
  &lt;li&gt;将所有生成的文件导入到Keychain中&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;永远不会撤销你现有的证书。如果无法再创建证书，则&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;将引发异常，这意味着你必须撤销其中一个现有证书来为新证书腾出空间。&lt;/p&gt;

&lt;p&gt;设置Apple ID&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane cert -u cert@krausefx.com

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cert(
    development: true,
    username: &quot;user@email.com&quot;
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#cert参数&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cert&lt;/code&gt;无法从Apple Developer Portal下载现有证书+私钥，因为私钥永远不会离开你的计算机。&lt;/p&gt;

&lt;h6 id=&quot;sigh&quot;&gt;sigh&lt;/h6&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;执行的文件操作&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-11-sighRecording.gif&quot; alt=&quot;sighRecording&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;将默认为App Store创建、修复和下载配置文件。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane sigh --appstore  # default
fastlane sigh --adhoc
fastlane sigh --development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;设置标识符和用户名：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane sigh -a com.krausefx.app -u username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane: beta do
    sigh(
        adhoc: true,
        force: true,
        filename: &quot;myFile.mobileprovision&quot;
    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#sigh参数&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;永远不会触及或使用由Xcode创建和管理的配置文件。相反，&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;将管理自己的一组配置文件。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sigh&lt;/code&gt;将访问iOS Dev Center下载，续订或生成&lt;code class=&quot;highlighter-rouge&quot;&gt;.mobileprovision&lt;/code&gt;文件。它使用&lt;a href=&quot;https://spaceship.airforce/&quot;&gt;Spaceship&lt;/a&gt;与Apple的Web服务进行通信。&lt;/p&gt;

&lt;h4 id=&quot;构建应用&quot;&gt;构建应用&lt;/h4&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;来构建和打包iOS App，它可以处理繁重的工作，并且轻松生成签名ipa和app文件&lt;/p&gt;

&lt;h5 id=&quot;基础用法&quot;&gt;基础用法&lt;/h5&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane gym
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;设置参数进行构建&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane gym --workspace &quot;Example.xcworkspace&quot; --scheme &quot;AppName&quot; --clean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果您需要使用其他Xcode安装，请使用xcode-select或定义DEVELOPER_DIR：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DEVELOPER_DIR=&quot;/Applications/Xcode6.2.app&quot; fastlane gym
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果需要上传到App Store或TestFlight，设置&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;的导出方法：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane gym --export_method ad-hoc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;传递布尔参数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane gym --include_bitcode true --include_symbols false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;需要&lt;code class=&quot;highlighter-rouge&quot;&gt;xcodebuild&lt;/code&gt;原始日志信息，打开&lt;code class=&quot;highlighter-rouge&quot;&gt;~/Library/Logs/gym&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;自动化构建流程&quot;&gt;自动化构建流程&lt;/h5&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  scan
  gym(scheme: &quot;MyApp&quot;)
  crashlytics
end

# error block is executed when a error occurs
error do |lane, exception|
  slack(
    # message with short human friendly message
    message: exception.to_s, 
    success: false, 
    # Output containing extended log output
    payload: { &quot;Output&quot; =&amp;gt; exception.error_info.to_s } 
  )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;当&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;引发错误时，&lt;code class=&quot;highlighter-rouge&quot;&gt;error_info&lt;/code&gt;属性将包含进程输出，让你可以在第三方工具（如Slack）中显示错误。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#gym参数&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后，你可以轻松地公测提供商之间进行切换（例如testflight，hockey，s3和更多）。&lt;/p&gt;

&lt;h4 id=&quot;上传应用到分发平台&quot;&gt;上传应用到分发平台&lt;/h4&gt;

&lt;p&gt;构建应用程序后，就可以将它上传到你选择的Beta测试服务中。fastlane的优雅之处在于你可以轻松地切换测试提供商，甚至可以一次上传到多个测试提供商，没有任何额外的工作。&lt;/p&gt;

&lt;p&gt;你所要做的就是在使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;构建应用程序后，将你选择的Beta测试提供程序添加到&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  match(type: &quot;appstore&quot;)    # see code signing guide for more information
  gym(scheme: &quot;MyApp&quot;)
  pilot
  slack(message: &quot;Successfully distributed a new beta build&quot;)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;fastlane会自动将生成的&lt;code class=&quot;highlighter-rouge&quot;&gt;.ipa&lt;/code&gt;文件的信息从&lt;code class=&quot;highlighter-rouge&quot;&gt;gym&lt;/code&gt;传递给你选择的Beta测试提供程序。&lt;/p&gt;

&lt;p&gt;以下只列举几种常见的Beta测试服务，有关其他受支持的Beta测试服务的更多信息，请参阅&lt;a href=&quot;https://docs.fastlane.tools/actions/#beta&quot;&gt;“Beta”操作列表&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;testflight&quot;&gt;TestFlight&lt;/h5&gt;

&lt;p&gt;你可以使用fastlane轻松地将新版本上传到TestFlight（它是App Store Connect的一部分）。为此，只需testflight在构建应用程序后使用内置操作即可&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # ...
  gym
  pilot
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一些示例用例&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # ...
  gym

  # Variant 1: Provide a changelog to your build
  pilot(changelog: &quot;Add rocket emoji&quot;)

  # Variant 2: Skip the &quot;Waiting for processing&quot; of the binary
  #   While this will speed up your build, it will not distribute
  #   the binary to your tests, nor set a changelog
  pilot(skip_waiting_for_build_processing: true)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果你曾经&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane init&lt;/code&gt;设置过fastlane，那么你的Apple ID将存储在&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Appfile&lt;/code&gt;。你也可以使用覆盖用户名&lt;code class=&quot;highlighter-rouge&quot;&gt;pilot(username: &quot;bot@fastlane.tools&quot;)&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;使用fastlane，你还可以自动管理你的Beta版测试人员，查看&lt;a href=&quot;https://docs.fastlane.tools/actions/upload_to_testflight/&quot;&gt;其他可用操作&lt;/a&gt;。&lt;/p&gt;

&lt;h5 id=&quot;crashlytics-fabric-beta&quot;&gt;Crashlytics (Fabric Beta）&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # ...
  gym
  crashlytics(api_token: &quot;[insert_key_here]&quot;,
              build_secret: &quot;[insert_key_here]&quot;)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;要获取API令牌，请打开&lt;a href=&quot;https://www.fabric.io/settings/organizations&quot;&gt;组织设置页面&lt;/a&gt;，然后单击API密钥并构建机密链接。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/crashlytics/&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;crashlytics&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;firim&quot;&gt;fir.im&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
    gym
    firim(firim_api_token: &quot;427899702537eaadc5104ecbf5096d5c&quot;
      )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/whlsxl/firim/tree/master/fastlane-plugin-firim&quot;&gt;更多插件信息&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;蒲公英&quot;&gt;蒲公英&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
    gym
    pgyer(api_key: &quot;7f15xxxxxxxxxxxxxxxxxx141&quot;,
    user_key: &quot;4a5bcxxxxxxxxxxxxxxx3a9e&quot;
    )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shishirui/fastlane-plugin-pgyer&quot;&gt;更多插件信息&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;提交应用到app-store&quot;&gt;提交应用到App Store&lt;/h4&gt;

&lt;p&gt;构建应用程序后，就可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;deliver&lt;/code&gt;上传到App Store了&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane: release do
    match(type: &quot;appstore&quot;)  # see code signing guide for more information
    gym(scheme: &quot;MyApp&quot;)
    deliver                  # upload your app to App Store Connect
    slack(message: &quot;Successfully uploaded a new App Store build&quot;)    
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;设置参数调用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deliver(
  submit_for_review: true,
  force: true,
  metadata_path: &quot;./metadata&quot;
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/upload_to_app_store/&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;deliver&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;扩展使用&quot;&gt;扩展使用&lt;/h2&gt;

&lt;h3 id=&quot;插件&quot;&gt;插件&lt;/h3&gt;

&lt;p&gt;fastlane的插件系统是官方支持用户开发的开放平台，你可以根据你的需求自定义开发不同的插件，并在fastlane中使用。&lt;/p&gt;

&lt;h4 id=&quot;寻找一个插件&quot;&gt;寻找一个插件&lt;/h4&gt;

&lt;p&gt;列出所有可用的插件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane search_plugins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;搜索特定的插件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane search_plugins [query]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;在项目中添加插件&quot;&gt;在项目中添加插件&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane add_plugin [name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;运行此命令后，fastlane会帮你对项目进行设置以开始使用插件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;添加插件配置文件&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Pluginfile&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;确保&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Pluginfile&lt;/code&gt;的身份正确引用&lt;code class=&quot;highlighter-rouge&quot;&gt;./Gemfile&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;运行&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane install_plugins&lt;/code&gt;以确保在本地计算机上安装了所有必需的依赖项（此步骤可能会要求你输入管理员密码以安装Ruby gem）&lt;/li&gt;
  &lt;li&gt;你将有3个新文件，这些文件都应该添加到版本控制中：&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Pluginfile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;在新机器上同步插件&quot;&gt;在新机器上同步插件&lt;/h4&gt;

&lt;p&gt;要确保所有插件都安装在本地计算机上，请运行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane install_plugins
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;删除插件&quot;&gt;删除插件&lt;/h4&gt;

&lt;p&gt;打开&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane/Pluginfile&lt;/code&gt;文件，并删除文件中像这样的配置项：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &quot;fastlane-plugin-[plugin_name]&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;appfile&quot;&gt;Appfile&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Appfile&lt;/code&gt;必须存储在&lt;code class=&quot;highlighter-rouge&quot;&gt;./fastlane&lt;/code&gt;目录中。&lt;/p&gt;

&lt;p&gt;默认情况下的&lt;code class=&quot;highlighter-rouge&quot;&gt;Appfile&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app_identifier &quot;net.sunapps.1&quot; # The bundle identifier of your app
apple_id &quot;felix@krausefx.com&quot;  # Your Apple email address

# You can uncomment the lines below and add your own
# team selection in case you're in multiple teams
# team_name &quot;Felix Krause&quot;
# team_id &quot;Q2CBPJ58CA&quot;

# To select a team for App Store Connect use
# itc_team_name &quot;Company Name&quot;
# itc_team_id &quot;18742801&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果你的App Store Connect和Apple Developer账号不相同，使用以下代码配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app_identifier &quot;tools.fastlane.app&quot;       # The bundle identifier of your app

apple_dev_portal_id &quot;portal@company.com&quot;  # Apple Developer Account
itunes_connect_id &quot;tunes@company.com&quot;     # App Store Connect Account

team_id &quot;Q2CBPJ58CA&quot; # Developer Portal Team ID
itc_team_id &quot;18742801&quot; # App Store Connect Team ID
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果你的项目每个环境都具有不同的包标识符（即beta，app store），则可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;for_platform&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;for_lane&lt;/code&gt;块声明来定义它。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app_identifier &quot;net.sunapps.1&quot;
apple_id &quot;felix@krausefx.com&quot;
team_id &quot;Q2CBPJ58CC&quot;

for_platform :ios do
  team_id '123' # for all iOS related things
  for_lane :test do
    app_identifier 'com.app.test'
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;在fastlane中使用appfile中的配置&quot;&gt;在fastlane中使用Appfile中的配置&lt;/h4&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;Fastfile&lt;/code&gt;中访问这些配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;使用gemfile进行依赖管理&quot;&gt;使用Gemfile进行依赖管理&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;明确定义使用的fastlane版本和依赖关系，并且能让fastlane使用更迅速。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;在项目的根目录创建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;文件&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  source &quot;https://rubygems.org&quot;
  gem &quot;fastlane&quot; 
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;运行&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo bundle update&lt;/code&gt;同时添加&lt;code class=&quot;highlighter-rouge&quot;&gt;./Gemfile&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;./Gemfile.lock&lt;/code&gt;版本控制文件&lt;/li&gt;
  &lt;li&gt;每次运行fastlane时，请使用&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec fastlane [lane]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在CI上，添加&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo bundle install&lt;/code&gt;作为第一个构建步骤&lt;/li&gt;
  &lt;li&gt;要更新fastlane，请运行&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo bundle update fastlane&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pem推送证书&quot;&gt;pem推送证书&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pem&lt;/code&gt;执行的文件操作&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-12-PEMRecording.gif&quot; alt=&quot;PEMRecording&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;命令会执行如下操作：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建新的签名请求&lt;/li&gt;
  &lt;li&gt;创建新的推送认证&lt;/li&gt;
  &lt;li&gt;下载证书&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.pem&lt;/code&gt;在当前工作目录中生成一个新文件，你可以将其上传到服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;请注意，pem永远不会撤销你现有的证书。pem无法下载任何现有的推送证书，因为私钥仅在其创建的计算机上可用。&lt;/p&gt;

&lt;p&gt;如果你已启用推送证书，该证书至少有30天有效，则pem不会创建新证书。如果你仍想创建一个，请使用force：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem --force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;你可以传递这样的参数：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem -a com.krausefx.app -u username
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果要生成开发证书，请执行以下操作：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem --development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;为你的p12文件设置密码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem -p &quot;MyPass&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;你可以为输出文件指定名称：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane pem -o my.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;中使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pem(
  force: true, # create a new profile, even if the old one is still valid
  app_identifier: &quot;net.sunapps.9&quot;, # optional app identifier,
  save_private_key: true,
  new_profile: proc do |profile_path| # this block gets called when a new profile was generated
    puts profile_path # the absolute path to the new PEM file
    # insert the code to upload the PEM file to the server
  end
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#pem参数&quot;&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;pem&lt;/code&gt;参数&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;增加内部版本号&quot;&gt;增加内部版本号&lt;/h3&gt;

&lt;p&gt;在TestFlight和App Store中，每次上传新版本时都必须增加内部版本号。&lt;/p&gt;

&lt;h4 id=&quot;beta内部版本号&quot;&gt;Beta内部版本号&lt;/h4&gt;
&lt;p&gt;下面的代码示例将使用TestFlight中的最新版本号并临时设置它。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  increment_build_number(
    build_number: latest_testflight_build_number + 1,
    xcodeproj: &quot;Example.xcodeproj&quot;
  )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;将构建号提交给版本控制&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # Ensure that your git status is not dirty
  ensure_git_status_clean

  # Increment the build number (not the version number)
  # Providing the xcodeproj is optional
  increment_build_number(xcodeproj: &quot;Example.xcodeproj&quot;)

  # Commit the version bump
  commit_version_bump(xcodeproj: &quot;Example.xcodeproj&quot;)

  # Add a git tag for this build. This will automatically
  # use an appropriate git tag name
  add_git_tag

  # Push the new commit and tag back to your git remote
  push_to_git_remote
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;app-store内部版本号&quot;&gt;App Store内部版本号&lt;/h4&gt;

&lt;p&gt;下面的代码示例将使用App Store Connect中的最新版本号并临时设置它。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  increment_build_number(
    build_number: app_store_build_number + 1,
    xcodeproj: &quot;Example.xcodeproj&quot;
  )
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;第三方beta测试服务&quot;&gt;第三方Beta测试服务&lt;/h3&gt;

&lt;p&gt;如果你不是使用TestFlight作为测试服务，则需要管理已注册的设备及其UDID。fastlane已经支持设备注册和更新配置文件。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta do
  # Before calling match, we make sure all our devices are registered on the Apple Developer Portal
  register_devices(devices_file: &quot;devices.txt&quot;)

  # After registering the new devices, we'll make sure to update the provisioning profile if necessary
  # Note how we make sure to pass &quot;adhoc&quot; to get and use a provisioning profile for Ad Hoc distribution
  sync_code_signing(force_for_new_devices: true, type: &quot;adhoc&quot;)
  build_app
  # ...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;devices.txt&lt;/code&gt;应该是这样的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Device ID Device Name
A123456789012345678901234567890123456789  DeviceName1
B123456789012345678901234567890123456789  DeviceName2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;参数表&quot;&gt;参数表&lt;/h2&gt;

&lt;h3 id=&quot;cert参数&quot;&gt;cert参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;development&lt;/td&gt;
      &lt;td&gt;创建开发证书而不是分发证书&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;force&lt;/td&gt;
      &lt;td&gt;即使存在现有证书，也要创建证书&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;username&lt;/td&gt;
      &lt;td&gt;您的Apple ID用户名&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_id&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的ID&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_name&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的名称&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;filename&lt;/td&gt;
      &lt;td&gt;要存储的证书的文件名&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_path&lt;/td&gt;
      &lt;td&gt;应存储所有证书和私钥的目录的路径&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keychain_path&lt;/td&gt;
      &lt;td&gt;自定义钥匙串的路径&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keychain_password&lt;/td&gt;
      &lt;td&gt;首次访问新mac上的证书时可能需要这样做。对于登录/默认钥匙串，这是您的帐户密码&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;platform&lt;/td&gt;
      &lt;td&gt;设置配置文件的平台（ios，macos）&lt;/td&gt;
      &lt;td&gt;ios&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sigh参数&quot;&gt;sigh参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;adhoc&lt;/td&gt;
      &lt;td&gt;设置此标志将生成AdHoc配置文件而不是App Store配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;development&lt;/td&gt;
      &lt;td&gt;更新开发证书而不是生产证书&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_install&lt;/td&gt;
      &lt;td&gt;默认情况下，证书将添加到本地计算机。设置此标志将跳过此操作&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;force&lt;/td&gt;
      &lt;td&gt;无论状态如何，都可以续订配置文件 - 自动为临时配置文件添加所有设备&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;app_identifier&lt;/td&gt;
      &lt;td&gt;您应用的捆绑包标识符&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;username&lt;/td&gt;
      &lt;td&gt;您的Apple ID用户名&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_id&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的ID&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_name&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的名称&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;provisioning_name&lt;/td&gt;
      &lt;td&gt;Apple Developer Portal上使用的配置文件的名称&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ignore_profiles_with_different_name&lt;/td&gt;
      &lt;td&gt;与：provisioning_name结合使用 - 当为true时，仅下载与此确切名称匹配的配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_path&lt;/td&gt;
      &lt;td&gt;应存储配置文件的目录&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cert_id&lt;/td&gt;
      &lt;td&gt;要使用的代码签名证书的ID（例如78ADL6LVAA）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cert_owner_name&lt;/td&gt;
      &lt;td&gt;用于新配置文件或续订的证书名称。（例如“Felix Krause”）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;filename&lt;/td&gt;
      &lt;td&gt;用于生成的配置文件的文件名（必须包含.mobileprovision）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_fetch_profiles&lt;/td&gt;
      &lt;td&gt;跳过现有配置文件的验证，如果您有数千个配置文件，这将非常有用&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_certificate_verification&lt;/td&gt;
      &lt;td&gt;跳过每个现有配置文件的证书验证。这将确保可以在本地计算机上使用配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;platform&lt;/td&gt;
      &lt;td&gt;设置配置文件的平台（即ios，tvos）&lt;/td&gt;
      &lt;td&gt;ios&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;readonly&lt;/td&gt;
      &lt;td&gt;仅获取现有配置文件，不生成新配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;template_name&lt;/td&gt;
      &lt;td&gt;配置文件模板的名称。如果开发者帐户具有配置配置文件模板（又名：自定义权利），则可以通过在创建/编辑配置文件时检查权利下拉列表来找到模板名称（例如“Apple Pay Pass Suppression Development”）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;gym参数&quot;&gt;gym参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;workspace&lt;/td&gt;
      &lt;td&gt;工作区文件的路径&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;project&lt;/td&gt;
      &lt;td&gt;项目文件的路径&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;scheme&lt;/td&gt;
      &lt;td&gt;该项目的scheme。确保它标记为Shared&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;clean&lt;/td&gt;
      &lt;td&gt;项目在建造之前是否应该进行Clean？&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_directory&lt;/td&gt;
      &lt;td&gt;应存储ipa文件的目录&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_name&lt;/td&gt;
      &lt;td&gt;生成的ipa文件的名称&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;configuration&lt;/td&gt;
      &lt;td&gt;构建应用程序时使用的配置。默认为’Release’&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;silent&lt;/td&gt;
      &lt;td&gt;隐藏构建时不必要的所有信息&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;codesigning_identity&lt;/td&gt;
      &lt;td&gt;要使用的代码签名标识的名称。它必须与名称完全匹配。例如’iPhone Distribution：SunApps GmbH’&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_package_ipa&lt;/td&gt;
      &lt;td&gt;我们应该跳过包装ipa吗？&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;include_symbols&lt;/td&gt;
      &lt;td&gt;ipa文件应该包含符号吗？&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;include_bitcode&lt;/td&gt;
      &lt;td&gt;ipa文件应该包含bitcode吗？&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;export_method&lt;/td&gt;
      &lt;td&gt;用于导出存档的方法。有效值包括：app-store，ad-hoc，package，enterprise，development，developer-id&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;export_options&lt;/td&gt;
      &lt;td&gt;导出选项plist的路径或带导出选项的哈希。使用’xcodebuild -help’打印全套可用选项&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;export_xcargs&lt;/td&gt;
      &lt;td&gt;将附加参数传递给xcodebuild以获取包阶段。请务必引用设置名称和值，例如OTHER_LDFLAGS =“ - ObjC -lstdc ++”&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_build_archive&lt;/td&gt;
      &lt;td&gt;从以前构建的xarchive导出ipa。使用archive_path作为源&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_archive&lt;/td&gt;
      &lt;td&gt;构建之后，不要归档，实际上不包括-archivePath参数&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;build_path&lt;/td&gt;
      &lt;td&gt;存档应存储在的目录&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;archive_path&lt;/td&gt;
      &lt;td&gt;创建存档的路径&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;derived_data_path&lt;/td&gt;
      &lt;td&gt;构建产品和其他派生数据的目录&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;result_bundle&lt;/td&gt;
      &lt;td&gt;是否应在输出目录中生成Xcode结果包&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;buildlog_path&lt;/td&gt;
      &lt;td&gt;存储构建日志的目录&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sdk&lt;/td&gt;
      &lt;td&gt;应该用于构建应用程序的SDK&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toolchain&lt;/td&gt;
      &lt;td&gt;应该用于构建应用程序的工具链（例如com.apple.dt.toolchain.Swift_2_3,org.swift.30p620160816a）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;destination&lt;/td&gt;
      &lt;td&gt;使用自定义目标构建应用程序&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;export_team_id&lt;/td&gt;
      &lt;td&gt;可选：有时您需要在导出ipa文件时指定团队ID&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcargs&lt;/td&gt;
      &lt;td&gt;将其他参数传递给xcodebuild以进行构建阶段。请务必引用设置名称和值，例如OTHER_LDFLAGS =“ - ObjC -lstdc ++”&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcconfig&lt;/td&gt;
      &lt;td&gt;使用额外的XCCONFIG文件来构建您的应用程序&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;suppress_xcode_output&lt;/td&gt;
      &lt;td&gt;将xcodebuild的输出抑制为stdout。输出仍保存在buildlog_path中&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;disable_xcpretty&lt;/td&gt;
      &lt;td&gt;禁用构建输出的xcpretty格式&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_test_format&lt;/td&gt;
      &lt;td&gt;使用测试（RSpec样式）格式进行构建输出&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_formatter&lt;/td&gt;
      &lt;td&gt;要使用的自定义xcpretty格式化程序&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_report_junit&lt;/td&gt;
      &lt;td&gt;让xcpretty在提供的路径上创建一个JUnit样式的XML报告&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_report_html&lt;/td&gt;
      &lt;td&gt;让xcpretty在提供的路径上创建一个简单的HTML报告&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_report_json&lt;/td&gt;
      &lt;td&gt;让xcpretty在提供的路径上创建JSON编译数据库&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;analyze_build_time&lt;/td&gt;
      &lt;td&gt;分析项目构建时间并将输出存储在’culprits.txt’文件中&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xcpretty_utf&lt;/td&gt;
      &lt;td&gt;报告构建时，xcpretty使用unicode编码&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_profile_detection&lt;/td&gt;
      &lt;td&gt;不要尝试从xcodeproj构建配置文件映射。应使用匹配或手动提供的映射&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;pem参数&quot;&gt;pem参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;development&lt;/td&gt;
      &lt;td&gt;更新开发推送证书而不是生产证书&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;generate_p12&lt;/td&gt;
      &lt;td&gt;另外为PEM文件生成p12文件&lt;/td&gt;
      &lt;td&gt;true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;active_days_limit&lt;/td&gt;
      &lt;td&gt;如果当前证书的有效期少于此天数，则生成一个新证书&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;force&lt;/td&gt;
      &lt;td&gt;创建一个新的推送证书，即使当前的证书有效30天（或PEM_ACTIVE_DAYS_LIMIT）更多天&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;save_private_key&lt;/td&gt;
      &lt;td&gt;设置为保存私有RSA密钥&lt;/td&gt;
      &lt;td&gt;true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;app_identifier&lt;/td&gt;
      &lt;td&gt;您应用的捆绑包标识符&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;username&lt;/td&gt;
      &lt;td&gt;您的Apple ID用户名&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_id&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的ID&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_name&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的名称&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;p12_password&lt;/td&gt;
      &lt;td&gt;用于p12文件的密码&lt;/td&gt;
      &lt;td&gt;’’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pem_name&lt;/td&gt;
      &lt;td&gt;生成的.pem文件的文件名&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;output_path&lt;/td&gt;
      &lt;td&gt;应存储所有证书和私钥的目录的路径&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;new_profile&lt;/td&gt;
      &lt;td&gt;如果有新的配置文件，则调用阻止&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/getting-started/ios/setup/&quot;&gt;设置fastlane&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/plugins/create-plugin/#fastlane-plugins&quot;&gt;fastlane插件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/advanced/Appfile/&quot;&gt;Appfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/sigh/&quot;&gt;sigh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/cert/&quot;&gt;cert&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/gym/&quot;&gt;gym&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/getting-started/ios/beta-deployment/&quot;&gt;iOS Beta Deployment using fastlane&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/pilot/&quot;&gt;pilot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/crashlytics/&quot;&gt;crashlytics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://try.crashlytics.com/beta/&quot;&gt;Crashlytics Beta&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fastlane/boarding#readme&quot;&gt;boarding&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/upload_to_app_store/&quot;&gt;deliver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 12 Sep 2018 08:21:47 +0800</pubDate>
        <link>http://zrocky.com/2018/09/fastlane/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/09/fastlane/</guid>
        
        <category>Fastlane</category>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>fastlane之使用match同步证书和配置文件</title>
        <description>&lt;p&gt;在开发过程中，证书和配置文件的管理一直是一个让人头痛的问题，不管是Xcode自动创建的众多让人摸不着头脑的配置文件，还是不断被其它人&lt;code class=&quot;highlighter-rouge&quot;&gt;revoke&lt;/code&gt;的证书，这些场景无不让人想要一个简单、彻底的解决方案， &lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;正是为解决这些问题而开发的。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;的方案是只创建一份&lt;code class=&quot;highlighter-rouge&quot;&gt;code sign&lt;/code&gt;所需文件，并使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Git&lt;/code&gt;在团队内共享它们。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;https://codesigning.guide&lt;/code&gt;概念的实现。&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;创建所有必需的证书和配置文件，并将它们存储在单独的git存储库中。每个有权访问仓库的团队成员都可以使用这些凭据进行代码签名。&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;还会自动修复损坏和过期的凭据。这是跨团队共享签名凭据的最简单方法。&lt;/p&gt;

&lt;h2 id=&quot;基本使用&quot;&gt;基本使用&lt;/h2&gt;

&lt;h3 id=&quot;准备&quot;&gt;准备&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;创建一个Git仓库&lt;strong&gt;(务必保证是私有的，安全很重要)&lt;/strong&gt;, 取名为&lt;code class=&quot;highlighter-rouge&quot;&gt;certificates&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(非必要)&lt;/code&gt;创建一个共享的Apple Developer账号&lt;/li&gt;
  &lt;li&gt;在项目目录中执行&lt;code class=&quot;highlighter-rouge&quot;&gt;Shell&lt;/code&gt;命令:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-07-match-init.gif&quot; alt=&quot;match_init&quot; /&gt;&lt;/p&gt;

&lt;p&gt;执行命令后会要求输入Git仓库地址, 可以是&lt;code class=&quot;highlighter-rouge&quot;&gt;https://或git&lt;/code&gt;URL（如果你是使用SSH对Git进行身份验证，则需要使用gitURL，否则在尝试匹配时将看会身份验证错误）。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane match init&lt;/code&gt;命令不会获取或修改你的证书和配置文件, 只会在&lt;code class=&quot;highlighter-rouge&quot;&gt;./fastlane&lt;/code&gt;目录生成一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Matchfile&lt;/code&gt;文件。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Matchfile&lt;/code&gt;内配置示例:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git_url&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/fastlane/certificates&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 
app_identifier&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tools.fastlane.app&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# username(&quot;user@fastlane.tools&quot;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;文件内记录了证书和配置文件的Git仓库地址及&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;命令的相关配置，可以根据你的需求来修改它们。&lt;/p&gt;

&lt;h3 id=&quot;生成证书和配置文件&quot;&gt;生成证书和配置文件&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;在首次运行前, 可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane match nuke&lt;/code&gt;命令清除现有的配置文件和证书。&lt;a href=&quot;#清除现有配置文件和证书&quot;&gt;(了解更多)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;你可以使用以下命令来生成证书:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 开发证书及配置文件&lt;/span&gt;
fastlane match development 

&lt;span class=&quot;c&quot;&gt;# 生成证书及内部分发配置文件&lt;/span&gt;
fastlane match adhoc

&lt;span class=&quot;c&quot;&gt;# 生产证书及配置文件&lt;/span&gt;
fastlane match appstore
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-10-match-appstore-small.gif&quot; alt=&quot;match_appstore_small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这将创建一个新的证书和配置文件（如果需要的话）并将它们存储在你的&lt;a href=&quot;# Git Repo&quot;&gt;Git仓库&lt;/a&gt;中。&lt;/p&gt;

&lt;p&gt;配置文件将安装在&lt;code class=&quot;highlighter-rouge&quot;&gt;~/Library/MobileDevice/Provisioning Profiles&lt;/code&gt;中，证书和私钥安装在你的钥匙串中。&lt;/p&gt;

&lt;h4 id=&quot;处理多个标识符&quot;&gt;处理多个标识符&lt;/h4&gt;

&lt;p&gt;如果你有多个标识符，则可以将同步操作换成以下命令执行，不同标识符之间使用逗号隔开&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match appstore -a tools.fastlane.app,tools.fastlane.app.watchkitapp 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;当然，你也可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;来处理以上操作：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :certificates &lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;match&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;app_identifier: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;com.krausefx.app1&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;com.krausefx.app2&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;com.krausefx.app3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: appstrore, &lt;span class=&quot;nb&quot;&gt;readonly&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样，你就只需执行&lt;code class=&quot;highlighter-rouge&quot;&gt;fantlane certificates&lt;/code&gt;命令即可完成操作&lt;/p&gt;

&lt;h4 id=&quot;在同一个仓库中配置多个团队证书&quot;&gt;在同一个仓库中配置多个团队证书&lt;/h4&gt;

&lt;p&gt;要配置多个的证书，需要在&lt;code class=&quot;highlighter-rouge&quot;&gt;Git&lt;/code&gt;中创建&lt;code class=&quot;highlighter-rouge&quot;&gt;branch&lt;/code&gt;来存放这些证书&lt;/p&gt;

&lt;p&gt;在生成证书时你应该使用&lt;code class=&quot;highlighter-rouge&quot;&gt;--git_branch&lt;/code&gt;参数，或者在&lt;code class=&quot;highlighter-rouge&quot;&gt;Matchfile&lt;/code&gt;中添加&lt;code class=&quot;highlighter-rouge&quot;&gt;git_branch&lt;/code&gt;参数，这样就能把生成的证书保存在对应的&lt;code class=&quot;highlighter-rouge&quot;&gt;branch&lt;/code&gt;中&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match appstore -a tools.fastlane.app --git_branch team01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;// TODO&lt;/p&gt;

&lt;h3 id=&quot;其他成员执行同步&quot;&gt;其他成员执行同步&lt;/h3&gt;

&lt;p&gt;其他成员需要同步证书和配置文件，只需执行相同的命令：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;它会识别Git仓库中是否有现成的证书和配置文件，如果有，就会安装仓库中现有的证书和配置文件。&lt;/p&gt;

&lt;p&gt;你甚至可以在某个模式下执行&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;操作，&lt;code class=&quot;highlighter-rouge&quot;&gt;readonly&lt;/code&gt;用来确保不会生成证书和配置文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match development --readonly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;扩展使用&quot;&gt;扩展使用&lt;/h2&gt;

&lt;h3 id=&quot;在lane中使用match&quot;&gt;在lane中使用match&lt;/h3&gt;

&lt;p&gt;添加&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;方法到&lt;code class=&quot;highlighter-rouge&quot;&gt;Fastfile&lt;/code&gt;中，则可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;lane&lt;/code&gt;来快速同步证书和配置文件&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;match&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;appstore&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

match&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;git_url: &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/fastlane/certificates&quot;&lt;/span&gt;,
      &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

match&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;git_url: &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/fastlane/certificates&quot;&lt;/span&gt;,
      &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;adhoc&quot;&lt;/span&gt;,
      app_identifier: &lt;span class=&quot;s2&quot;&gt;&quot;tools.fastlane.app&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

match&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;git_url: &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/fastlane/certificates&quot;&lt;/span&gt;,
      &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;enterprise&quot;&lt;/span&gt;,
      app_identifier: &lt;span class=&quot;s2&quot;&gt;&quot;tools.fastlane.app&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# _match_ should be called before building the app with _gym_&lt;/span&gt;
gym
&lt;span class=&quot;c&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;注册新设备&quot;&gt;注册新设备&lt;/h3&gt;

&lt;p&gt;通过使用&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;，每次将新设备添加到Ad Hoc或开发配置文件时都会节省大量的时间。将&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;register_devices&lt;/code&gt;操作结合使用。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lane :beta &lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;register_devices&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;devices_file: &lt;span class=&quot;s2&quot;&gt;&quot;./devices.txt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  match&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;adhoc&quot;&lt;/span&gt;, force_for_new_devices: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;通过使用&lt;code class=&quot;highlighter-rouge&quot;&gt;force_for_new_devices&lt;/code&gt;参数，&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;将检查自上次运行匹配以来，设备计数是否已更改，并在必要时自动重新生成配置文件。你也可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;force: true&lt;/code&gt;参数强制每次运行时都重新生成配置文件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;要点&lt;/strong&gt;：App Store配置文件将会忽略&lt;code class=&quot;highlighter-rouge&quot;&gt;force_for_new_devices&lt;/code&gt;参数，因为这种模式不包含任何设备信息。&lt;/p&gt;

&lt;p&gt;如果你不使用&lt;code class=&quot;highlighter-rouge&quot;&gt;fastlane&lt;/code&gt;，还可以使用命令行中的&lt;code class=&quot;highlighter-rouge&quot;&gt;force_for_new_devices&lt;/code&gt;选项：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match adhoc --force_for_new_devices
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;清除现有配置文件和证书&quot;&gt;清除现有配置文件和证书&lt;/h3&gt;

&lt;p&gt;如果你的Apple Developer账户中有大量无效、过期或者Xcode自动生成的配置文件和证书，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;match nuke&lt;/code&gt;命令撤销证书和配置文件，不必担心，App Store / TestFlight中已有的应用程序仍然可以使用，推送证书也不在清理范围内。清除账户后，你就可以从零开始，运行&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;生成证书和配置文件。&lt;/p&gt;

&lt;p&gt;要撤消特定环境的所有证书和配置文件：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fastlane match nuke development
fastlane match nuke distribution
fastlane match nuke enterprise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-10-match-nuke.gif&quot; alt=&quot;match_nuke&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;会在操作前会向你确认操作是否执行&lt;/p&gt;

&lt;h3 id=&quot;git-仓库&quot;&gt;Git 仓库&lt;/h3&gt;

&lt;p&gt;第一次运行&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;后，你的Git仓库将包含2个目录：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;certs&lt;/code&gt;文件夹包含所有带有私钥的证书&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;profiles&lt;/code&gt;文件夹包含所有配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;还生成了一个README.md文件，让新的团队成员更容易上手：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../assets/images/post/2018-09-10-github-repo.png&quot; alt=&quot;github_repo&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;参数&quot;&gt;参数&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;键&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
      &lt;th&gt;默认值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;git_url&lt;/td&gt;
      &lt;td&gt;包含所有证书的git仓库的URL&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git_branch&lt;/td&gt;
      &lt;td&gt;使用特定的git分支&lt;/td&gt;
      &lt;td&gt;master&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;type&lt;/td&gt;
      &lt;td&gt;定义配置文件类型，可以是appstore，adhoc，development，enterprise&lt;/td&gt;
      &lt;td&gt;development&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;app_identifier&lt;/td&gt;
      &lt;td&gt;应用的捆绑标识符（以逗号分隔）&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;username&lt;/td&gt;
      &lt;td&gt;您的Apple ID用户名&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keychain_name&lt;/td&gt;
      &lt;td&gt;钥匙串应该导入项目&lt;/td&gt;
      &lt;td&gt;login.keychain&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keychain_password&lt;/td&gt;
      &lt;td&gt;首次访问新mac上的证书时可能需要这样做。对于登录/默认钥匙串，这是您的帐户密码&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;readonly&lt;/td&gt;
      &lt;td&gt;仅获取现有证书和配置文件，不生成新证书和配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_id&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的ID&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git_full_name&lt;/td&gt;
      &lt;td&gt;要提交的git用户全名&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git_user_email	git&lt;/td&gt;
      &lt;td&gt;用户电子邮件提交&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;team_name&lt;/td&gt;
      &lt;td&gt;如果您在多个团队中，您的Developer Portal团队的名称&lt;/td&gt;
      &lt;td&gt;*&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;verbose&lt;/td&gt;
      &lt;td&gt;打印出额外的信息和所有命令&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;force&lt;/td&gt;
      &lt;td&gt;每次运行匹配时都要更新配置文件&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_confirmation&lt;/td&gt;
      &lt;td&gt;在核弹期间禁用确认提示，并回答是&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;shallow_clone&lt;/td&gt;
      &lt;td&gt;对存储库进行浅层克隆（将历史记录截断为1个版本）&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;clone_branch_directly&lt;/td&gt;
      &lt;td&gt;克隆指定的分支，而不是整个repo。这要求分支已经存在。否则命令将失败&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;force_for_new_devices&lt;/td&gt;
      &lt;td&gt;如果开发人员门户上的设备计数已更改，请续订配置文件。忽略配置文件类型’appstore’&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;skip_docs&lt;/td&gt;
      &lt;td&gt;跳过为创建的git存储库生成README.md&lt;/td&gt;
      &lt;td&gt;false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;platform&lt;/td&gt;
      &lt;td&gt;设置供应配置文件的平台以使用（即ios，tvos）&lt;/td&gt;
      &lt;td&gt;ios&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;template_name&lt;/td&gt;
      &lt;td&gt;配置文件模板的名称。如果开发者帐户具有配置配置文件模板（又名：自定义权利），则可以通过在创建/编辑配置文件时检查权利下拉列表来找到模板名称（例如“Apple Pay Pass Suppression Development”）&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;参考链接&quot;&gt;参考链接&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.fastlane.tools/actions/match/&quot;&gt;match官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 10 Sep 2018 17:26:40 +0800</pubDate>
        <link>http://zrocky.com/2018/09/how-to-use-fastlane-match/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/09/how-to-use-fastlane-match/</guid>
        
        <category>Fastlane</category>
        
        <category>match</category>
        
        
        <category>iOS</category>
        
      </item>
    
      <item>
        <title>正则表达式</title>
        <description>&lt;p&gt;字符串是编程时涉及到的最多的一种数据结构，对字符串进行操作的需求几乎无处不在。比如判断一个字符串是否是合法的Email地址，虽然可以编程提取&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;前后的子串，再分别判断是否是单词和域名，但这样做不但麻烦，而且代码难以复用。&lt;br /&gt;
正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则，该字符串就是不合法的。&lt;/p&gt;

&lt;h3 id=&quot;尝试&quot;&gt;尝试&lt;/h3&gt;

&lt;p&gt;所以我们判断一个字符串是否是合法的Email的方法是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;创建一个匹配Email的正则表达式；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用该正则表达式去匹配用户的输入来判断是否合法。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;因为正则表达式也是用字符串表示的，所以，我们要首先了解如何用字符来描述字符。&lt;/p&gt;

&lt;p&gt;在正则表达式中，如果直接给出字符，就是精确匹配。用&lt;code class=&quot;highlighter-rouge&quot;&gt;\d&lt;/code&gt;可以匹配一个数字，&lt;code class=&quot;highlighter-rouge&quot;&gt;\w&lt;/code&gt;可以匹配一个字母或数字，所以：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'00\d'&lt;/code&gt;可以匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'007'&lt;/code&gt;，但无法匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'00A'&lt;/code&gt;；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'\d\d\d'&lt;/code&gt;可以匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'010'&lt;/code&gt;；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'\w\w\d'&lt;/code&gt;可以匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'py3'&lt;/code&gt;；&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;可以匹配任意字符，所以：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'py.'&lt;/code&gt;可以匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'pyc'&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;'pyo'&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;'py!'&lt;/code&gt;等等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;要匹配变长的字符，在正则表达式中，用&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;表示任意个字符（包括0个），用&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;表示至少一个字符，用&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;表示0个或1个字符，用&lt;code class=&quot;highlighter-rouge&quot;&gt;{n}&lt;/code&gt;表示n个字符，用&lt;code class=&quot;highlighter-rouge&quot;&gt;{n,m}&lt;/code&gt;表示n-m个字符：&lt;/p&gt;

&lt;p&gt;来看一个复杂的例子：&lt;code class=&quot;highlighter-rouge&quot;&gt;\d{3}\s+\d{3,8}&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;我们来从左到右解读一下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\d{3}&lt;/code&gt;表示匹配3个数字，例如&lt;code class=&quot;highlighter-rouge&quot;&gt;'010'&lt;/code&gt;；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\s&lt;/code&gt;可以匹配一个空格（也包括Tab等空白符），所以&lt;code class=&quot;highlighter-rouge&quot;&gt;\s+&lt;/code&gt;表示至少有一个空格，例如匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;' '&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;' '&lt;/code&gt;等；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\d{3,8}&lt;/code&gt;表示3-8个数字，例如&lt;code class=&quot;highlighter-rouge&quot;&gt;'1234567'&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;综合起来，上面的正则表达式可以匹配以任意个空格隔开的带区号的电话号码。&lt;/p&gt;

&lt;p&gt;如果要匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'010-12345'&lt;/code&gt;这样的号码呢？由于&lt;code class=&quot;highlighter-rouge&quot;&gt;'-'&lt;/code&gt;是特殊字符，在正则表达式中，要用&lt;code class=&quot;highlighter-rouge&quot;&gt;'\'&lt;/code&gt;转义，所以，上面的正则是&lt;code class=&quot;highlighter-rouge&quot;&gt;\d{3}\-\d{3,8}&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;但是，仍然无法匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'010 - 12345'&lt;/code&gt;，因为带有空格。所以我们需要更复杂的匹配方式。&lt;/p&gt;

&lt;h3 id=&quot;进阶&quot;&gt;进阶&lt;/h3&gt;

&lt;p&gt;要做更精确地匹配，可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;表示范围，比如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[0-9a-zA-Z\_]&lt;/code&gt;可以匹配一个数字、字母或者下划线；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[0-9a-zA-Z\_]+&lt;/code&gt;可以匹配至少由一个数字、字母或者下划线组成的字符串，比如&lt;code class=&quot;highlighter-rouge&quot;&gt;'a100'&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;'0_Z'&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;'Py3000'&lt;/code&gt;等等；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-zA-Z\_][0-9a-zA-Z\_]*&lt;/code&gt;可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-zA-Z\_][0-9a-zA-Z\_]{0, 19}&lt;/code&gt;更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A|B&lt;/code&gt;可以匹配A或B，所以&lt;code class=&quot;highlighter-rouge&quot;&gt;(P|p)ython&lt;/code&gt;可以匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'Python'&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;'python'&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;表示行的开头，&lt;code class=&quot;highlighter-rouge&quot;&gt;^\d&lt;/code&gt;表示必须以数字开头。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;表示行的结束，&lt;code class=&quot;highlighter-rouge&quot;&gt;\d$&lt;/code&gt;表示必须以数字结束。&lt;/p&gt;

&lt;p&gt;你可能注意到了，&lt;code class=&quot;highlighter-rouge&quot;&gt;py&lt;/code&gt;也可以匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'python'&lt;/code&gt;，但是加上&lt;code class=&quot;highlighter-rouge&quot;&gt;^py$&lt;/code&gt;就变成了整行匹配，就只能匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;'py'&lt;/code&gt;了。&lt;/p&gt;

&lt;h3 id=&quot;re模块&quot;&gt;re模块&lt;/h3&gt;

&lt;p&gt;有了准备知识，我们就可以在Python中使用正则表达式了。Python提供&lt;code class=&quot;highlighter-rouge&quot;&gt;re&lt;/code&gt;模块，包含所有正则表达式的功能。由于Python的字符串本身也用&lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;转义，所以要特别注意：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;s = 'ABC\\-001' # Python的字符串
# 对应的正则表达式字符串变成：
# 'ABC\-001'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;因此我们强烈建议使用Python的&lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt;前缀，就不用考虑转义的问题了：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;s = r'ABC\-001' # Python的字符串
# 对应的正则表达式字符串不变：
# 'ABC\-001'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;先看看如何判断正则表达式是否匹配：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import re
&amp;gt;&amp;gt;&amp;gt; re.match(r'^\d{3}\-\d{3,8}$', '010-12345')
&amp;lt;_sre.SRE_Match object; span=(0, 9), match='010-12345'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; re.match(r'^\d{3}\-\d{3,8}$', '010 12345')
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;match()&lt;/code&gt;方法判断是否匹配，如果匹配成功，返回一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Match&lt;/code&gt;对象，否则返回&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;。常见的判断方法就是：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;test = '用户输入的字符串'
if re.match(r'正则表达式', test):
    print('ok')
else:
    print('failed')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;切分字符串&quot;&gt;切分字符串&lt;/h3&gt;

&lt;p&gt;用正则表达式切分字符串比用固定的字符更灵活，请看正常的切分代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; 'a b   c'.split(' ')
['a', 'b', '', '', 'c']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;嗯，无法识别连续的空格，用正则表达式试试：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; re.split(r'\s+', 'a b   c')
['a', 'b', 'c']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;无论多少个空格都可以正常分割。加入&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;试试：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; re.split(r'[\s\,]+', 'a,b, c  d')
['a', 'b', 'c', 'd']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;再加入&lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt;试试：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; re.split(r'[\s\,\;]+', 'a,b;; c  d')
['a', 'b', 'c', 'd']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果用户输入了一组标签，下次记得用正则表达式来把不规范的输入转化成正确的数组。&lt;/p&gt;

&lt;h3 id=&quot;分组&quot;&gt;分组&lt;/h3&gt;

&lt;p&gt;除了简单地判断是否匹配之外，正则表达式还有提取子串的强大功能。用&lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt;表示的就是要提取的分组（Group）。比如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^(\d{3})-(\d{3,8})$&lt;/code&gt;分别定义了两个组，可以直接从匹配的字符串中提取出区号和本地号码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; m = re.match(r'^(\d{3})-(\d{3,8})$', '010-12345')
&amp;gt;&amp;gt;&amp;gt; m
&amp;lt;_sre.SRE_Match object; span=(0, 9), match='010-12345'&amp;gt;
&amp;gt;&amp;gt;&amp;gt; m.group(0)
'010-12345'
&amp;gt;&amp;gt;&amp;gt; m.group(1)
'010'
&amp;gt;&amp;gt;&amp;gt; m.group(2)
'12345'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果正则表达式中定义了组，就可以在&lt;code class=&quot;highlighter-rouge&quot;&gt;Match&lt;/code&gt;对象上用&lt;code class=&quot;highlighter-rouge&quot;&gt;group()&lt;/code&gt;方法提取出子串来。&lt;/p&gt;

&lt;p&gt;注意到&lt;code class=&quot;highlighter-rouge&quot;&gt;group(0)&lt;/code&gt;永远是原始字符串，&lt;code class=&quot;highlighter-rouge&quot;&gt;group(1)&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;group(2)&lt;/code&gt;……表示第1、2、……个子串。&lt;/p&gt;

&lt;p&gt;提取子串非常有用。来看一个更凶残的例子：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; t = '19:05:30'
&amp;gt;&amp;gt;&amp;gt; m = re.match(r'^(0[0-9]|1[0-9]|2[0-3]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])\:(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|[0-9])$', t)
&amp;gt;&amp;gt;&amp;gt; m.groups()
('19', '05', '30')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这个正则表达式可以直接识别合法的时间。但是有些时候，用正则表达式也无法做到完全验证，比如识别日期：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'^(0[1-9]|1[0-2]|[0-9])-(0[1-9]|1[0-9]|2[0-9]|3[0-1]|[0-9])$'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;对于&lt;code class=&quot;highlighter-rouge&quot;&gt;'2-30'&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;'4-31'&lt;/code&gt;这样的非法日期，用正则还是识别不了，或者说写出来非常困难，这时就需要程序配合识别了。&lt;/p&gt;

&lt;h3 id=&quot;贪婪匹配&quot;&gt;贪婪匹配&lt;/h3&gt;

&lt;p&gt;最后需要特别指出的是，正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符。举例如下，匹配出数字后面的&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; re.match(r'^(\d+)(0*)$', '102300').groups()
('102300', '')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;由于&lt;code class=&quot;highlighter-rouge&quot;&gt;\d+&lt;/code&gt;采用贪婪匹配，直接把后面的&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;全部匹配了，结果&lt;code class=&quot;highlighter-rouge&quot;&gt;0*&lt;/code&gt;只能匹配空字符串了。&lt;/p&gt;

&lt;p&gt;必须让&lt;code class=&quot;highlighter-rouge&quot;&gt;\d+&lt;/code&gt;采用非贪婪匹配（也就是尽可能少匹配），才能把后面的&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;匹配出来，加个&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;就可以让&lt;code class=&quot;highlighter-rouge&quot;&gt;\d+&lt;/code&gt;采用非贪婪匹配：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; re.match(r'^(\d+?)(0*)$', '102300').groups()
('1023', '00')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;编译&quot;&gt;编译&lt;/h3&gt;

&lt;p&gt;当我们在Python中使用正则表达式时，re模块内部会干两件事情：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;编译正则表达式，如果正则表达式的字符串本身不合法，会报错；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用编译后的正则表达式去匹配字符串。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果一个正则表达式要重复使用几千次，出于效率的考虑，我们可以预编译该正则表达式，接下来重复使用时就不需要编译这个步骤了，直接匹配：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import re
# 编译:
&amp;gt;&amp;gt;&amp;gt; re_telephone = re.compile(r'^(\d{3})-(\d{3,8})$')
# 使用：
&amp;gt;&amp;gt;&amp;gt; re_telephone.match('010-12345').groups()
('010', '12345')
&amp;gt;&amp;gt;&amp;gt; re_telephone.match('010-8086').groups()
('010', '8086')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;编译后生成Regular Expression对象，由于该对象自己包含了正则表达式，所以调用对应的方法时不用给出正则字符串。&lt;/p&gt;

&lt;h3 id=&quot;小结&quot;&gt;小结&lt;/h3&gt;

&lt;p&gt;正则表达式非常强大，要在短短的一节里讲完是不可能的。要讲清楚正则的所有内容，可以写一本厚厚的书了。如果你经常遇到正则表达式的问题，你可能需要一本正则表达式的参考书。&lt;/p&gt;

</description>
        <pubDate>Sun, 02 Sep 2018 02:00:00 +0800</pubDate>
        <link>http://zrocky.com/2018/09/regular-expressions/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/09/regular-expressions/</guid>
        
        <category>Python</category>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>适用于团队的统一 MarkDown 书写规范</title>
        <description>&lt;p&gt;由于 MarkDown 语法在细节的书写方式很多，为了让不同个体的文档传产出结构一致，提炼出此规范。&lt;br /&gt;
该规范遵循 [MarkDown 官方语法] 以及 [GitHub MakDown 语法]，旨在统一书写格式和代码风格，将多种写法统一。&lt;/p&gt;

&lt;h2 id=&quot;全局规范&quot;&gt;全局规范&lt;/h2&gt;
&lt;p&gt;&lt;a name=&quot;top&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MarkDown 文件均使用&lt;code class=&quot;highlighter-rouge&quot;&gt;.md&lt;/code&gt;作为后缀 (&lt;strong&gt;小写字母&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;普通文本换行，使用行末尾&lt;code class=&quot;highlighter-rouge&quot;&gt;2空格&lt;/code&gt;触发&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;格式规范&quot;&gt;格式规范&lt;/h2&gt;

&lt;h3 id=&quot;标题结构格式&quot;&gt;标题结构格式&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;标题与紧贴的&lt;code class=&quot;highlighter-rouge&quot;&gt;上下正文&lt;/code&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;1整行换行&lt;/code&gt;隔开&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;号和文字之间&lt;code class=&quot;highlighter-rouge&quot;&gt;1个空格&lt;/code&gt;连接&lt;/li&gt;
  &lt;li&gt;标题层级如下，最多6级&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 顶级标题 等价于 title 和 &amp;lt;h1&amp;gt;
## 次级标题 等价于 &amp;lt;h2&amp;gt;
### 3级标题 等价于 &amp;lt;h3&amp;gt;
#### 4级标题 等价于 &amp;lt;h4&amp;gt;
##### 5级标题 等价于 &amp;lt;h5&amp;gt;
###### 6级标题 等价于 &amp;lt;h6&amp;gt;
####### 注：此行错误，标题层级最多6级 没有&amp;lt;h7&amp;gt;标签
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;加强和强调规范&quot;&gt;加强和强调规范&lt;/h3&gt;

&lt;p&gt;以下两种写法都是正确的，请统一为&lt;strong&gt;第一种&lt;/strong&gt;，即一律使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;**加强&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;*强调&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*emphasize*   **strong** 相当于&amp;lt;strong&amp;gt;标签和&amp;lt;em&amp;gt;标签
_emphasize_   __strong__
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;~~&lt;/code&gt;给文字添加删除线&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~strikethrough~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;代码块规范&quot;&gt;代码块规范&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;行内代码使用&lt;code class=&quot;highlighter-rouge&quot;&gt;1对顿号&lt;/code&gt; 如： `hello world!`&lt;/li&gt;
  &lt;li&gt;块级代码使用&lt;code class=&quot;highlighter-rouge&quot;&gt;3个顿号&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;4个空格&lt;/code&gt;，且上下均用&lt;code class=&quot;highlighter-rouge&quot;&gt;整行隔开&lt;/code&gt;，如下:  (&lt;strong&gt;占用7行&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo '3个顿号';  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo '4个空格'；
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;列表写法&quot;&gt;列表写法&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;列号&lt;code class=&quot;highlighter-rouge&quot;&gt;1.&lt;/code&gt; 或者&lt;code class=&quot;highlighter-rouge&quot;&gt;* &lt;/code&gt;后其后内容&lt;code class=&quot;highlighter-rouge&quot;&gt;空格&lt;/code&gt;隔开&lt;/li&gt;
  &lt;li&gt;列表块前后&lt;code class=&quot;highlighter-rouge&quot;&gt;整行隔开&lt;/code&gt; 如下：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Windows  
2. Mac
3. iOS
    * iPhone
    * iPad
4. Android
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;实际预览：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Windows&lt;/li&gt;
  &lt;li&gt;Mac&lt;/li&gt;
  &lt;li&gt;iOS
    &lt;ul&gt;
      &lt;li&gt;iPhone&lt;/li&gt;
      &lt;li&gt;iPad&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Android&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Windows  
*  Mac
*  iOS
*  Android
    1. v3.2
    2. v4.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;实际预览：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows&lt;/li&gt;
  &lt;li&gt;Mac&lt;/li&gt;
  &lt;li&gt;iOS&lt;/li&gt;
  &lt;li&gt;Android
    &lt;ol&gt;
      &lt;li&gt;v3.2&lt;/li&gt;
      &lt;li&gt;v4.1&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;其他标签规范&quot;&gt;其他标签规范&lt;/h3&gt;

&lt;p&gt;链接和Email
Inline:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;An [example](http://url.com/ &quot;Title&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;引用样式标签 (titles are optional):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;An [example][id]. Then, anywhere
else in the doc, define the link:

[id]: http://example.com/  &quot;Title&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Email:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;An email &amp;lt;example@example.com&amp;gt; link.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;插图
Inline (titles are optional):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![alt text](/path/img.jpg &quot;Title&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;引用式插图:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![alt text][id]

[id]: /url/to/img.jpg &quot;Title&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;引用块及嵌套&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Email-style angle brackets
are used for blockquotes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;And, they can be nested.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;headers-in-blockquotes&quot;&gt;Headers in blockquotes&lt;/h4&gt;

  &lt;ul&gt;
    &lt;li&gt;You can quote a list.&lt;/li&gt;
    &lt;li&gt;Etc.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;内联代码&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 段落中的用法&lt;/p&gt;

&lt;p&gt;也可以 &lt;code class=&quot;highlighter-rouge&quot;&gt;`代码中包含波浪号`&lt;/code&gt;.&lt;br /&gt;
代码块&lt;/p&gt;

&lt;p&gt;Indent every line of a code block by at least 4 spaces or 1 tab.
代码的每行都最少用4个空格或者一个制表符(tab)&lt;/p&gt;

&lt;p&gt;我是普通文本块&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;我是一个预格式化的
代码块.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;水平分割线&lt;br /&gt;
三个&lt;code class=&quot;highlighter-rouge&quot;&gt;连字符-&lt;/code&gt;:&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;表格规范&quot;&gt;表格规范&lt;/h3&gt;

&lt;p&gt;一个简单的表格看起来如下：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;第一个头部&lt;/th&gt;
      &lt;th&gt;第二个头部&lt;/th&gt;
      &lt;th&gt;第三个头部&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;内容格子&lt;/td&gt;
      &lt;td&gt;内容格子&lt;/td&gt;
      &lt;td&gt;内容格子&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;内容格子&lt;/td&gt;
      &lt;td&gt;内容格子&lt;/td&gt;
      &lt;td&gt;内容格子&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;每列的对齐可以通过在分割线上添加冒号来实现：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;第一个头部&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;第二个头部&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;第三个头部&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;左对齐&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;居中&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;右对齐&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;左对齐&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;居中&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;右对齐&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;页内锚标记&quot;&gt;页内锚标记&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#全局规范&quot;&gt;点我跳转到顶部&lt;/a&gt;   // 利用 &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;##&lt;/code&gt; 生成 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; 锚标签&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#top&quot;&gt;另一种锚标记&lt;/a&gt; // 利用 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a name=&quot;top&quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;附：参考 Hello-World.md 源码，&lt;em&gt;注意换行的使用&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Hello-World

这是一个范例文件格式
我是普通换行

## 我是&amp;lt;h2&amp;gt;标题

我是`&amp;lt;h2&amp;gt;`的内容

## 我是&amp;lt;h3&amp;gt;标题

* Windows  
*  Mac
*  iOS
*  Android

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注：引用范例请参看底部&lt;/p&gt;

&lt;h4 id=&quot;license&quot;&gt;License&lt;/h4&gt;

&lt;p&gt;Released under &lt;a href=&quot;http://rem.mit-license.org/&quot;&gt;MIT&lt;/a&gt; LICENSE&lt;/p&gt;

&lt;h4 id=&quot;参考&quot;&gt;参考&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://http://daringfireball.net/projects/markdown/&quot;&gt;MarkDown 官方语法&lt;/a&gt;
&lt;a href=&quot;https://https://github.com/mojombo/github-flavored-markdown/issues/1&quot;&gt;GitHub MakDown 语法&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 02 Sep 2018 02:00:00 +0800</pubDate>
        <link>http://zrocky.com/2018/09/markdown-guideline-for-team/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/09/markdown-guideline-for-team/</guid>
        
        <category>MarkDown</category>
        
        
        <category>MarkDown</category>
        
      </item>
    
      <item>
        <title>Ghost博客搭建</title>
        <description>&lt;p&gt;Ghost是一个现代化的，开源的，基于Node.js的博客发布平台，它的前端管理系统基于Ember.js， 后端的模板引擎采用的handlebars， 而默认数据库是MySQL，当然，你也可以使用其他类型的数据库。&lt;/p&gt;

&lt;h3 id=&quot;ghost10&quot;&gt;Ghost1.0&lt;/h3&gt;

&lt;p&gt;如果用过1.0版本以前的Ghost的同学，会对Ghost版本的更新感到头疼，而一些配置问题也让人心烦。
好在，就在一个月前，Ghost推出了Ghost1.0.0，并在一个月内升级到了1.6.2（到目前为止）
大版本的提升，主要是因为一个东西的出现，那就是Ghost-Cli。&lt;/p&gt;

&lt;h3 id=&quot;ghost-cli&quot;&gt;Ghost-CLI&lt;/h3&gt;

&lt;p&gt;有了Ghost-Cli，你可以&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;快速安装Ghost&lt;/li&gt;
  &lt;li&gt;自动配置MySQL, Nginx , SSL等&lt;/li&gt;
  &lt;li&gt;快捷的更新版本（只用一行命令就可以）&lt;/li&gt;
  &lt;li&gt;其他等等&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;你需要先做些准备官方推荐&quot;&gt;你需要先做些准备（官方推荐）&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ubuntu 16.04操作系统的服务器（官方只推荐这个操作系统&lt;/li&gt;
  &lt;li&gt;MySQL（默认)&lt;/li&gt;
  &lt;li&gt;Nginx&lt;/li&gt;
  &lt;li&gt;Node
    &lt;ul&gt;
      &lt;li&gt;支持的版本： &amp;gt;= 4.5 &amp;lt; 5.*&lt;/li&gt;
      &lt;li&gt;推荐的版本： &amp;gt;= 6.9 &amp;lt; 7.*&lt;/li&gt;
      &lt;li&gt;将会被支持的版本： 8.* （Ghost 只支持LTS的Node，如目前的6， 将来的LTS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;服务器至少1GB 内存（可以使用swap）&lt;/li&gt;
  &lt;li&gt;需要一个非root用户来执行ghost命令&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;follow-me&quot;&gt;Follow me&lt;/h3&gt;

&lt;h4 id=&quot;1gb内存-你需要swap&quot;&gt;1GB内存？ 你需要Swap&lt;/h4&gt;

&lt;p&gt;你可以看&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-16-04&quot;&gt;这个&lt;/a&gt;，或者在命令行中输入（官方推荐方法）&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/swap &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1k &lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1024k
mkswap /var/swap
swapon /var/swap
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/var/swap swap swap default 0 0'&lt;/span&gt; &amp;gt;&amp;gt; /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;用非root用户执行ghost命令&quot;&gt;用非root用户执行ghost命令&lt;/h3&gt;

&lt;p&gt;增加用户&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;adduser &amp;lt;user&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;给用户sudo权限&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;usermod -G sudo &amp;lt;user&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;切换到非root用户&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su - &amp;lt;user&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;用apt-get安装mysql和nginx以及node&quot;&gt;用apt-get安装MySQL和Nginx以及Node&lt;/h3&gt;

&lt;p&gt;如果你已经安装好这些东西，跳过就行&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update package lists&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Upgrade installed packages&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Install NGINX&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Open Firewall for HTTP/HTTPS&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw allow &lt;span class=&quot;s1&quot;&gt;'Nginx Full'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Install MySQL&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install mysql-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Add the NodeSource APT repository for Node 6&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;install Node.js&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install -y nodejs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;安装Ghost-CLI&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo npm i -g ghost-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;或者使用yarn(&amp;gt;= 0.23.x)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yarn global add ghost-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;准备工作完成。&lt;/p&gt;

&lt;h3 id=&quot;安装ghost&quot;&gt;安装Ghost&lt;/h3&gt;

&lt;p&gt;新建一个文件夹&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkdir -p /var/www/ghost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;！！不要安装在/root下
给这个文件夹你的用户的权限([user] 换成你的非root用户名)&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;user]:[user] /var/www/ghost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;切换到新文件夹里&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/www/ghost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ghost install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后会蹦出一系列的问题，包括&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;域名&lt;/li&gt;
  &lt;li&gt;MySQL信息（localhost, 用户名，密码， 数据库名）&lt;/li&gt;
  &lt;li&gt;Nginx&lt;/li&gt;
  &lt;li&gt;SSL&lt;/li&gt;
  &lt;li&gt;其他&lt;/li&gt;
  &lt;li&gt;最后一步会提示你是否要启动服务&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;完成&quot;&gt;完成&lt;/h3&gt;

&lt;p&gt;现在，你输入你的域名，应该就能成功的访问了。
输入&lt;code class=&quot;highlighter-rouge&quot;&gt;域名/ghost&lt;/code&gt;
可以进入网站的后台系统，可以进行发布，更换主题等各种功能&lt;/p&gt;

&lt;h3 id=&quot;其他&quot;&gt;其他&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.ghost.org/v1/docs/introduction&quot;&gt;官方文档&lt;/a&gt;
你可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;ghost config&lt;/code&gt;来更改配置
你也可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;ghost start/stop/restart&lt;/code&gt;来管理你的应用
你也可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;ghost install&lt;/code&gt;来更新你的应用&lt;/p&gt;

</description>
        <pubDate>Sun, 02 Sep 2018 02:00:00 +0800</pubDate>
        <link>http://zrocky.com/2018/09/create-ghost-blog/</link>
        <guid isPermaLink="true">http://zrocky.com/2018/09/create-ghost-blog/</guid>
        
        <category>Ghost</category>
        
        
        <category>Blog</category>
        
      </item>
    
      <item>
        <title>Python笔记</title>
        <description>&lt;p&gt;很早就对&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;这门语言感兴趣, 终于有时间可以系统地学习, 所以才会有这篇笔记, 笔记本身基于&lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;OC&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Swift&lt;/code&gt;三门语言, 相同之处没有太多赘述, 我也是一笔带过, 希望知晓! 我学习的来源主要是廖雪峰的&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;教程, 本人并不是原创者, 笔记仅为本人自我记录的学习笔记&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000&quot;&gt;廖雪峰的Python教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;paython开发基础&quot;&gt;Paython开发基础&lt;/h2&gt;

&lt;h3 id=&quot;python安装&quot;&gt;Python安装&lt;/h3&gt;
&lt;p&gt;在Mac系统中, 系统内置了Python2.7版本, 所以Mac系统用户此时已基本满足编译所需环境。但是随着Python3.x版本的普及,建议使用Python3.x版本进行开发,笔记中代码也是在Python3.x环境下编译的&lt;/p&gt;

&lt;h4 id=&quot;使用homebrew安装python3&quot;&gt;使用HomeBrew安装Python3&lt;/h4&gt;

&lt;p&gt;在Terminal通过命令&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install python3&lt;/code&gt;安装即可&lt;/p&gt;

&lt;h3 id=&quot;python编译器选择&quot;&gt;Python编译器选择&lt;/h3&gt;
&lt;p&gt;在Mac系统中可以选择Sublime Text作为Python的编译器&lt;/p&gt;

&lt;h3 id=&quot;python3编译说明&quot;&gt;Python3编译说明&lt;/h3&gt;

&lt;p&gt;虽然我们使用HomeBrew安装了Python3版本，但是因为Mac内置了Python2.7，所以通用的&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;命令在Mac下寻址的仍然是Python2.7，我们需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Python3&lt;/code&gt;命令来区分两种版本&lt;/p&gt;

&lt;h3 id=&quot;运行python代码&quot;&gt;运行Python代码&lt;/h3&gt;
&lt;p&gt;这里会有两种方式, 一种是讲Python代码写在.py文件中, 利用Terminal命令进行编译&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在终端运行.py文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python3 first.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;在Terminal的Python交互环境中直接书写Python命令进行编译&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在Mac或Linux系统中, 可以在代码最前面加上&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/code&gt;, 系统会识别&lt;code class=&quot;highlighter-rouge&quot;&gt;.py&lt;/code&gt;文件为可执行程序, Windows系统中将会忽略这一句&lt;/p&gt;

&lt;h2 id=&quot;paython语言基础&quot;&gt;Paython语言基础&lt;/h2&gt;

&lt;h3 id=&quot;输入输出io&quot;&gt;输入输出(I/O)&lt;/h3&gt;
&lt;h4 id=&quot;输出&quot;&gt;输出&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;print()&lt;/code&gt;函数输出,&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello, World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt;表示字符串&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;print()&lt;/code&gt;函数也可以接受多个字符串，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;隔开&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;print()&lt;/code&gt;函数在遇到&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;时会输出一个空格&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;print()&lt;/code&gt;函数也可以打印整数，或者计算结果&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;混合输出数值和字符串&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'100 + 200 ='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;输入&quot;&gt;输入&lt;/h4&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;raw_input(&quot;输入提示语: &quot;)&lt;/code&gt;让用户从键盘输入, 括号中可填入友好提醒词&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Please input your name: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输入的字符会保存在&lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;变量中&lt;/p&gt;

&lt;h3 id=&quot;语法规范&quot;&gt;语法规范&lt;/h3&gt;
&lt;h4 id=&quot;注释&quot;&gt;注释&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;放在解释语句前面进行注释&lt;/p&gt;

&lt;h4 id=&quot;大小写区分&quot;&gt;大小写区分&lt;/h4&gt;
&lt;p&gt;严格区分大小写, 混用会造成编译出错&lt;/p&gt;

&lt;h3 id=&quot;数据类型&quot;&gt;数据类型&lt;/h3&gt;
&lt;p&gt;Python的数据类型与其它开发语言大致相同&lt;/p&gt;

&lt;p&gt;整数运算得出的永远是整数&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果为&lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果需要做出精确的计算, 必须带有浮点数&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果为&lt;code class=&quot;highlighter-rouge&quot;&gt;3.3333333333333335&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;字符串&quot;&gt;字符串&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;'''...'''&lt;/code&gt;可以打印换行的文本&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'''line1
line2
line3'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;line1
line2
line3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;布尔值&quot;&gt;布尔值&lt;/h4&gt;
&lt;p&gt;包含两个值&lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;(注意区分大小写)&lt;/p&gt;

&lt;p&gt;涉及的运算符有&lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# and&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果: &lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# or&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果: &lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# not&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果: &lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;空值&quot;&gt;空值&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;表示空值, 但是空值并不等于&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;变量&quot;&gt;变量&lt;/h3&gt;
&lt;p&gt;Python是一门&lt;code class=&quot;highlighter-rouge&quot;&gt;动态变量语言&lt;/code&gt;,相对应的有&lt;code class=&quot;highlighter-rouge&quot;&gt;静态变量语言&lt;/code&gt;, 动态语言的特点是在定义变量时可以不指定变量类型, 而静态语言则必须在定义变量时确定变量的类型&lt;/p&gt;

&lt;p&gt;同一个变量可以反复赋值, 并且每次赋值的类型可以不同&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;python is fun&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;针对变量的赋值操作&lt;code class=&quot;highlighter-rouge&quot;&gt;a = &quot;ABC&quot;&lt;/code&gt;, Python首先创建了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ABC&quot;&lt;/code&gt;字符串, 然后创建了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;变量, 并且让&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;指向&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ABC&quot;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;常量&quot;&gt;常量&lt;/h3&gt;
&lt;p&gt;常量约定俗成使用全大写字母表示, 例如&lt;code class=&quot;highlighter-rouge&quot;&gt;WIDTH&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;字符编码&quot;&gt;字符编码&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ASCII&lt;/code&gt;使用一字节保存字符, 包含字母数字和一些符号&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GB2312&lt;/code&gt;等国际语言使用两个字节保存字符&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt;包含所有语言字符&lt;/p&gt;

&lt;p&gt;但是&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt;的英文数字也是使用2个字节, 所以发明了可变长的编码&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;, 当是英文数字时, 使用一个字节, 其它字符用多个字节保存&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;可变长字符编码&lt;/p&gt;

&lt;p&gt;用记事本编辑的时候，从文件读取的&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;字符被转换为&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt;字符到内存里，编辑完成后，保存的时候再把&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt;转换为&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;保存到文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.liaoxuefeng.com/files/attachments/001387245992536e2ba28125cf04f5c8985dbc94a02245e000/0&quot; alt=&quot;textCode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;浏览网页的时候，服务器会把动态生成的&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt;内容转换为&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;再传输到浏览器：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.liaoxuefeng.com/files/attachments/001387245979827634fd6204f9346a1ae6358d9ed051666000/0&quot; alt=&quot;webCode&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;python字符&quot;&gt;Python字符&lt;/h3&gt;
&lt;h4 id=&quot;ascii与字符之间的转换&quot;&gt;ASCII与字符之间的转换&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;chr()&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;ord()&lt;/code&gt;函数, 可用于字符与&lt;code class=&quot;highlighter-rouge&quot;&gt;ASCII&lt;/code&gt;字符之间的互转&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 将ASCII转化为字符&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 将字符转化为ASCII&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果为:2&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A
97

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;unicode字符&quot;&gt;Unicode字符&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;u&quot;...&quot;&lt;/code&gt;表示&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt;字符&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;u'niha'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果为&lt;code class=&quot;highlighter-rouge&quot;&gt;niha&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;utf-8字符&quot;&gt;UTF-8字符&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;encode('utf-8')&lt;/code&gt;方法将&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt;字符转化为&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;字符&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;s&quot;&gt;u'ABC'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果: &lt;code class=&quot;highlighter-rouge&quot;&gt;'ABC'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;decode('utf-8')&lt;/code&gt;方法将&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;字符转化为&lt;code class=&quot;highlighter-rouge&quot;&gt;Unicode&lt;/code&gt;字符&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;s&quot;&gt;'ABC'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果: &lt;code class=&quot;highlighter-rouge&quot;&gt;u'ABC'&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;python中字符的实际应用&quot;&gt;Python中字符的实际应用&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;len()&lt;/code&gt;函数可以计算出字符的长度&lt;/p&gt;

&lt;p&gt;因为Python文件本身也是也是一个文本文件, 所以在文件中使用中文时, 需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;编码&lt;/p&gt;

&lt;p&gt;在文件开头添加&lt;code class=&quot;highlighter-rouge&quot;&gt;# -*- coding: utf-8 -*-&lt;/code&gt;, 让编译器以&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;编码进行编译文件, 不然可能出现乱码&lt;/p&gt;

&lt;h4 id=&quot;字符格式化&quot;&gt;字符格式化&lt;/h4&gt;
&lt;p&gt;使用格式化字符串进行格式化输出, 格式与C语言保持一致&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;拼接格式化的值, 值用括号包含, 以&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;分隔多个值&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hi! &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s, your score is &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Michelle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hi! Michelle, your scrore is 97
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;常用的占位符有&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;%d	整数&lt;/li&gt;
  &lt;li&gt;%f浮点数&lt;/li&gt;
  &lt;li&gt;%s字符串&lt;/li&gt;
  &lt;li&gt;%x十六进制整数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;格式化整数和浮点数还可以指定是否补0和整数与小数的位数：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%02&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1415926&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3-01
3.14
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;集合类型&quot;&gt;集合类型&lt;/h3&gt;
&lt;h4 id=&quot;list类型&quot;&gt;list类型&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;[..., ...]&lt;/code&gt;表示一个&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;内元素可以改变, 且元素类型可以不同&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rocky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Shawn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;James&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;取值&quot;&gt;取值&lt;/h5&gt;
&lt;p&gt;获取其中一个值, 索引为负数表示从后向前获取索引&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 倒数第一个值&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;插值&quot;&gt;插值&lt;/h5&gt;
&lt;p&gt;插入一个值&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Henry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在末尾拼接一个值&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Harley&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;删值&quot;&gt;删值&lt;/h5&gt;
&lt;p&gt;删除&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;中某个索引的值&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 删除最后一个值&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 删除指定索引的值&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;改值&quot;&gt;改值&lt;/h5&gt;
&lt;p&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;中的某个索引的值&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Yuri&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;排序&quot;&gt;排序&lt;/h5&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;sort()&lt;/code&gt;进行排序&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;tuple元组类型&quot;&gt;tuple(元组)类型&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;(..., ...)&lt;/code&gt;表示一个&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;内元素不可改变, 元素类型可以不同&lt;/p&gt;

&lt;p&gt;因为&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;不可改变, 所以更加安全, 在实际使用中推荐尽量使用&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ptyhon&quot;&gt;names = (&quot;Rocky&quot;, &quot;Jack&quot;, &quot;James&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;定义1个元素的&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;, 如果元素是数字, 需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;(1,)&lt;/code&gt;写法&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;也有可变的形式, 当我们把&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;内的元素定义为&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;时, &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;内元素可进行变化, 生成了一个简洁可变的&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;条件判断&quot;&gt;条件判断&lt;/h3&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;elif&lt;/code&gt;关键字编写条件判断语句&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HaHa&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;WaWa&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;KaKa&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;循环&quot;&gt;循环&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;有两种循环, 一种是&lt;code class=&quot;highlighter-rouge&quot;&gt;for...in&lt;/code&gt;循环, 另一种是&lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt;循环&lt;/p&gt;

&lt;h4 id=&quot;forin循环&quot;&gt;for…in循环&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for...in&lt;/code&gt;遍历了&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;里所有的元素&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Rocky
Michael
Jack
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在实际开发中, 经常需要遍历整数集合, &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;提供了&lt;code class=&quot;highlighter-rouge&quot;&gt;range(...)&lt;/code&gt;函数用来遍历整数集合&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0
1
2
3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;while循环&quot;&gt;while循环&lt;/h4&gt;
&lt;p&gt;当满足条件时, 则不断调循环体, 当不满足条件时, 则退出循环&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  
	&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;字典集合&quot;&gt;字典集合&lt;/h3&gt;
&lt;h4 id=&quot;dict&quot;&gt;dict&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dict&lt;/code&gt;是使用键值对形式的存储集合, 以&lt;code class=&quot;highlighter-rouge&quot;&gt;{key : value}&lt;/code&gt;形式表示&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rocky&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Jack&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;判断&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;是否在&lt;code class=&quot;highlighter-rouge&quot;&gt;dict&lt;/code&gt;内&lt;/p&gt;

&lt;p&gt;返回True或False&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&quot;Allen&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;返回None或者自定义的默认返回值&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scroe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Allen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;取值及赋值&quot;&gt;取值及赋值&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rocky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rocky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Rocky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;100
99
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;删值-1&quot;&gt;删值&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Jack&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;set&quot;&gt;set&lt;/h4&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;set([key, key])&lt;/code&gt;表示一个set, 创建时需传入一个&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;作为输入集合&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;是一个元素不重复集合, 也就是说&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;会对所有元素进行去重&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果: &lt;code class=&quot;highlighter-rouge&quot;&gt;set([1, 2, 3])&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;添加&quot;&gt;添加&lt;/h5&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;add(key)&lt;/code&gt;方法进行添加, 可添加重复值&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;remove(key)&lt;/code&gt;方法进行删除&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;集合运算&quot;&gt;集合运算&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;的数学本质是无序不重复集合, 所以两个&lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;之间可以做交集并集运算&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set([2, 3])
set([1, 2, 3, 4])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;函数&quot;&gt;函数&lt;/h2&gt;
&lt;p&gt;使用抽象方法, 不关心底层实现, 专注问题本身&lt;/p&gt;

&lt;h3 id=&quot;函数调用&quot;&gt;函数调用&lt;/h3&gt;
&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;官网可以查看&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;内置的函数使用方法&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html&quot;&gt;Python内置函数&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;类型转换函数&quot;&gt;类型转换函数&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'123'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;12.34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'12.34'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;12.34&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'1.23'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;unicode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'100'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;函数别名&quot;&gt;函数别名&lt;/h4&gt;
&lt;p&gt;函数名其实是一个指向函数对象的引用, 所以可以将函数名赋值给一个变量, 相当于起别名&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;abs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;函数定义&quot;&gt;函数定义&lt;/h3&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;def&lt;/code&gt;关键字定义函数, 用&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;返回返回值, 如果返回空可以&lt;code class=&quot;highlighter-rouge&quot;&gt;return None&lt;/code&gt;, 也可以简写为&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果: &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;空函数&quot;&gt;空函数&lt;/h4&gt;
&lt;p&gt;如果想定义一个空函数, 可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;pass&lt;/code&gt;, 表示什么也不做&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也可以使用在判断语句当中&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;参数检查&quot;&gt;参数检查&lt;/h4&gt;
&lt;p&gt;系统的函数会自动检查参数类型, 而我们自定义的则没有, 我们可以添加参数检查代码&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TypeError&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bad operand type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;File &quot;first.py&quot;, line 81, in &amp;lt;module&amp;gt;
    print rocky(1, 2.1)
  File &quot;first.py&quot;, line 75, in rocky
    raise TypeError (&quot;bad operand type&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;返回值&quot;&gt;返回值&lt;/h4&gt;
&lt;p&gt;函数可以返回多个返回值, 但&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;本质上是只能返回一个返回值, 之所以能返回多个, 是因为返回值的类型为&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果:&lt;code class=&quot;highlighter-rouge&quot;&gt;(1, 2)&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;函数参数&quot;&gt;函数参数&lt;/h3&gt;
&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;中函数参数有多种实用方法, 使用默认参数、可变参数和关键字参数, 可以不同程度地简化代码&lt;/p&gt;

&lt;h4 id=&quot;默认参数&quot;&gt;默认参数&lt;/h4&gt;
&lt;p&gt;当函数中有的值不是经常变化的, 就可以使用默认参数, 让函数调用变得简单&lt;/p&gt;

&lt;p&gt;&lt;em&gt;必选参数必须放在默认参数前面&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;默认参数必须指向不可变对象&lt;/em&gt;, 不然会出现对象不重新初始化问题&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 设置参数b默认值为2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
	
&lt;span class=&quot;c&quot;&gt;# 使用默认参数, 在函数调用时可以不用写可选参数部分&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 当参数不是默认值时, 可以改变参数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当多个参数中有的使用默认, 而有的需要自定义值时, 可以指定参数名对应的参数值, 也就意味着, 可以不按顺序填写参数&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
	
&lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;可变参数&quot;&gt;可变参数&lt;/h4&gt;
&lt;p&gt;使用可变参数, 可以让调用对象在定义函数时, 暂时不用管参数的个数&lt;/p&gt;

&lt;p&gt;只需要在参数名前面添加&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;, 便可以创建一个可变参数, 在函数内部, 参数获得的是一个&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
&lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果是一个&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;想要调用可变参数函数, 则需要在前面添加&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;关键字参数&quot;&gt;关键字参数&lt;/h4&gt;
&lt;p&gt;关键字参数在必选参数之外, 还可以传入一个&lt;code class=&quot;highlighter-rouge&quot;&gt;dict&lt;/code&gt;, 用以扩展函数的功能&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kw&lt;/span&gt;
	
&lt;span class=&quot;c&quot;&gt;# 直接应用key调用	&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 使用dict调用&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;d&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;参数组合&quot;&gt;参数组合&lt;/h4&gt;
&lt;p&gt;必选参数,默认参数, 可变参数, 关键字参数可以混用, 但是参数定义的顺序必须是：必选参数、默认参数、可变参数和关键字参数。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rocky&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kw&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数&lt;code class=&quot;highlighter-rouge&quot;&gt;fun(*args, **kw)&lt;/code&gt;可以接收任何参数&lt;/p&gt;

</description>
        <pubDate>Tue, 24 May 2016 02:00:00 +0800</pubDate>
        <link>http://zrocky.com/2016/05/python-learning-note/</link>
        <guid isPermaLink="true">http://zrocky.com/2016/05/python-learning-note/</guid>
        
        <category>Python</category>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>Python爬虫</title>
        <description>&lt;p&gt;爬虫, 数据说话的时代, 具有数据收集的手段, 我觉得很重要, 因为这些数据能帮助我们更好的分析趋势, 在解决问题时提供良好的依据, 以上就是我学习爬虫的动力所在&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/1052.html&quot;&gt;静觅&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;python爬虫入门&quot;&gt;Python爬虫入门&lt;/h2&gt;
&lt;p&gt;Python爬虫有一些基础库, 我们就从基础库的学习, 开始爬虫之路&lt;/p&gt;

&lt;h3 id=&quot;urllib的使用&quot;&gt;Urllib的使用&lt;/h3&gt;
&lt;p&gt;在使用之前, 需要导入Urllib库&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;获取网页&quot;&gt;获取网页&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 标准写法 (推荐)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 简写&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;第一个参数&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;即为&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;，第二个参数&lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;是访问&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;时要传送的数据，第三个&lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;是设置超时时间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;第二三个参数是可以不传送的，&lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;默认为空&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;默认为 &lt;code class=&quot;highlighter-rouge&quot;&gt;socket._GLOBAL_DEFAULT_TIMEOUT&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;第一个参数&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;是必须要传送的，在这个例子里面我们传送了百度的&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;，执行&lt;code class=&quot;highlighter-rouge&quot;&gt;urlopen&lt;/code&gt;方法之后，返回一个&lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt;对象，返回信息便保存在这里面。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;post与get数据传送&quot;&gt;POST与GET数据传送&lt;/h4&gt;
&lt;h5 id=&quot;post&quot;&gt;POST&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;123&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com/login&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;get&quot;&gt;GET&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;123&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com/login&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;geturl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;?&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geturl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;urllib高级使用&quot;&gt;Urllib高级使用&lt;/h4&gt;
&lt;h5 id=&quot;设置headers&quot;&gt;设置headers&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com/login&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user_agent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User-Agent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;123&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;abc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;利用设置&lt;code class=&quot;highlighter-rouge&quot;&gt;headers&lt;/code&gt;可以用来对付&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;反盗链&quot;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'User-Agent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Referer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.zhihu.com/articles'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;需要注意的&lt;code class=&quot;highlighter-rouge&quot;&gt;headers&lt;/code&gt;属性&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;User-Agent : 有些服务器或 Proxy 会通过该值来判断是否是浏览器发出的请求&lt;/li&gt;
    &lt;li&gt;Content-Type : 在使用 REST 接口时，服务器会检查该值，用来确定 HTTP Body 中的内容该怎样解析。&lt;/li&gt;
    &lt;li&gt;application/xml ： 在 XML RPC，如 RESTful/SOAP 调用时使用&lt;/li&gt;
    &lt;li&gt;application/json ： 在 JSON RPC 调用时使用&lt;/li&gt;
    &lt;li&gt;application/x-www-form-urlencoded ： 浏览器提交 Web 表单时使用&lt;/li&gt;
    &lt;li&gt;在使用服务器提供的 RESTful 或 SOAP 服务时， Content-Type 设置错误会导致服务器拒绝服务&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;设置porxy代理&quot;&gt;设置Porxy(代理)&lt;/h5&gt;
&lt;p&gt;假如一个网站它会检测某一段时间某个IP 的访问次数，如果访问次数过多，它会禁止你的访问. 所以你可以设置一些代理服务器来帮助你做工作，每隔一段时间换一个代理&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;urllib2&lt;/code&gt;默认会使用环境变量&lt;code class=&quot;highlighter-rouge&quot;&gt;http_proxy&lt;/code&gt; 来设置&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP Proxy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;设置方法:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;enable_proxy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;proxy_handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProxyHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://some-proxy.com:8080&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;null_proxy_handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProxyHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enable_proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proxy_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
	&lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null_proxy_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;设置timeout&quot;&gt;设置TimeOut&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# data参数空出未填&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 填写了data参数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;使用put和delete方法&quot;&gt;使用PUT和DELETE方法&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt;协议有六种请求方法，&lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;put&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;delete&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;options&lt;/code&gt;，我们有时候需要用到&lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt;方式或者&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;方式请求。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PUT'&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# or 'DELETE'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;urlerror异常处理&quot;&gt;URLError异常处理&lt;/h3&gt;
&lt;p&gt;可能产生&lt;code class=&quot;highlighter-rouge&quot;&gt;URLError&lt;/code&gt;的原因&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;网络无连接，即本机无法上网&lt;/li&gt;
  &lt;li&gt;连接不到特定的服务器&lt;/li&gt;
  &lt;li&gt;服务器不存在&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;try...except&lt;/code&gt;捕获异常&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.xxxxxxxx.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reason&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;httperror&quot;&gt;HTTPError&lt;/h4&gt;
&lt;p&gt;服务器不能处理的请求, 会返回一个&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPError&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPError&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;URLError&lt;/code&gt;的子类, 以下列举常见&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTPError&lt;/code&gt;错误码&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;100：继续  客户端应当继续发送请求。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。&lt;/li&gt;
    &lt;li&gt;101： 转换协议  在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。只有在切换新的协议更有好处的时候才应该采取类似措施。&lt;/li&gt;
    &lt;li&gt;102：继续处理   由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。&lt;/li&gt;
    &lt;li&gt;200：请求成功      处理方式：获得响应的内容，进行处理&lt;/li&gt;
    &lt;li&gt;201：请求完成，结果是创建了新资源。新创建资源的URI可在响应的实体中得到    处理方式：爬虫中不会遇到&lt;/li&gt;
    &lt;li&gt;202：请求被接受，但处理尚未完成    处理方式：阻塞等待&lt;/li&gt;
    &lt;li&gt;204：服务器端已经实现了请求，但是没有返回新的信 息。如果客户是用户代理，则无须为此更新自身的文档视图。    处理方式：丢弃&lt;/li&gt;
    &lt;li&gt;300：该状态码不被HTTP/1.0的应用程序直接使用， 只是作为3XX类型回应的默认解释。存在多个可用的被请求资源。    处理方式：若程序中能够处理，则进行进一步处理，如果程序中不能处理，则丢弃&lt;/li&gt;
    &lt;li&gt;301：请求到的资源都会分配一个永久的URL，这样就可以在将来通过该URL来访问此资源    处理方式：重定向到分配的URL&lt;/li&gt;
    &lt;li&gt;302：请求到的资源在一个不同的URL处临时保存     处理方式：重定向到临时的URL&lt;/li&gt;
    &lt;li&gt;304：请求的资源未更新     处理方式：丢弃&lt;/li&gt;
    &lt;li&gt;400：非法请求     处理方式：丢弃&lt;/li&gt;
    &lt;li&gt;401：未授权     处理方式：丢弃&lt;/li&gt;
    &lt;li&gt;403：禁止     处理方式：丢弃&lt;/li&gt;
    &lt;li&gt;404：没有找到     处理方式：丢弃&lt;/li&gt;
    &lt;li&gt;500：服务器内部错误  服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器端的源代码出现错误时出现。&lt;/li&gt;
    &lt;li&gt;501：服务器无法识别  服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。&lt;/li&gt;
    &lt;li&gt;502：错误网关  作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。&lt;/li&gt;
    &lt;li&gt;503：服务出错   由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;在错误判断上我们预先判断子类错误, 如果判断不到, 再判断父类错误, 在输出错误信息之前还可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;hasattr&lt;/code&gt;方法提前对属性进行判断&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.xxxxxxxx.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hasattr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hasattr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;reason&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reason&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OK&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;cookie的使用&quot;&gt;Cookie的使用&lt;/h3&gt;
&lt;p&gt;Cookie，指某些网站为了辨别用户身份、进行session跟踪而储存在用户本地终端上的数据（通常经过加密）&lt;/p&gt;

&lt;h4 id=&quot;opener&quot;&gt;Opener&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;opener&lt;/code&gt;是一个urllib2.OpenerDirector的实例, 获取一个&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;时会使用一个&lt;code class=&quot;highlighter-rouge&quot;&gt;opener&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;urlopen&lt;/code&gt;就是一个特殊的&lt;code class=&quot;highlighter-rouge&quot;&gt;opener&lt;/code&gt;实例, 如果我们使用到了&lt;code class=&quot;highlighter-rouge&quot;&gt;Cookie&lt;/code&gt;, 仅仅使用&lt;code class=&quot;highlighter-rouge&quot;&gt;urlopen&lt;/code&gt;是不能达到目的的&lt;/p&gt;

&lt;h4 id=&quot;cookielib&quot;&gt;Cookielib&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cookielib&lt;/code&gt;模块的主要作用是提供可存储&lt;code class=&quot;highlighter-rouge&quot;&gt;cookie&lt;/code&gt;的对象，以便于与&lt;code class=&quot;highlighter-rouge&quot;&gt;urllib2&lt;/code&gt;模块配合使用来访问Internet资源。&lt;code class=&quot;highlighter-rouge&quot;&gt;Cookielib&lt;/code&gt;模块非常强大，我们可以利用本模块的&lt;code class=&quot;highlighter-rouge&quot;&gt;CookieJar&lt;/code&gt;类的对象来捕获&lt;code class=&quot;highlighter-rouge&quot;&gt;cookie&lt;/code&gt;并在后续连接请求时重新发送，比如可以实现模拟登录功能。该模块主要的对象有&lt;code class=&quot;highlighter-rouge&quot;&gt;CookieJar&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;FileCookieJar&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;MozillaCookieJar&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;LWPCookieJar&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;获取cookie&quot;&gt;获取Cookie&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cookielib&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#声明一个CookieJar对象实例来保存cookie&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookielib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CookieJar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#利用urllib2库的HTTPCookieProcessor对象来创建cookie处理器&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPCookieProcessor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#通过handler来构建opener&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#此处的open方法同urllib2的urlopen方法，也可以传入request&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.baidu.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Name = '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Value = '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;保存cookie到文件&quot;&gt;保存Cookie到文件&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cookielib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#设置保存cookie的文件，同级目录下的cookie.txt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cookie.txt'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#声明一个MozillaCookieJar对象实例来保存cookie，之后写入文件&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookielib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MozillaCookieJar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#利用urllib2库的HTTPCookieProcessor对象来创建cookie处理器&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPCookieProcessor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#通过handler来构建opener&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#创建一个请求，原理同urllib2的urlopen&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#保存cookie到文件&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ignore_discard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore_expires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ignore_discard&lt;/code&gt;的意思是即使&lt;code class=&quot;highlighter-rouge&quot;&gt;cookies&lt;/code&gt;将被丢弃也将它保存下来&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ignore_expires&lt;/code&gt;的意思是如果在该文件中&lt;code class=&quot;highlighter-rouge&quot;&gt;cookies&lt;/code&gt;已经存在，则覆盖原文件写入&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;从文件中读取cookie&quot;&gt;从文件中读取Cookie&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cookielib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#创建MozillaCookieJar实例对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookielib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MozillaCookieJar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#从文件中读取cookie内容到变量&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cookie.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore_discard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore_expires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#创建请求的request&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#利用urllib2的build_opener方法创建一个opener&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPCookieProcessor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;利用cookie模拟网站登录&quot;&gt;利用Cookie模拟网站登录&lt;/h5&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cookielib&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cookie.txt'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#声明一个MozillaCookieJar对象实例来保存cookie，之后写入文件&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookielib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MozillaCookieJar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HTTPCookieProcessor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;postdata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlencode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
			&lt;span class=&quot;s&quot;&gt;'stuid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'201200131012'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s&quot;&gt;'pwd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'23342321'&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#登录教务系统的URL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loginUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://jwxt.sdu.edu.cn:7890/pls/wwwbks/bks_login2.login'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#模拟登录，并把cookie保存到变量&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loginUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#保存cookie到cookie.txt中&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ignore_discard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore_expires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#利用cookie请求访问另一个网址，此网址是成绩查询网址&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gradeUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://jwxt.sdu.edu.cn:7890/pls/wwwbks/bkscjcx.curscopre'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#请求访问成绩查询网址&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gradeUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;正则表达式&quot;&gt;正则表达式&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://qiniu.cuiqingcai.com/wp-content/uploads/2015/02/20130515113723855.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;相关注解&quot;&gt;相关注解&lt;/h4&gt;
&lt;h5 id=&quot;数量词的贪婪模式与非贪婪模式&quot;&gt;数量词的贪婪模式与非贪婪模式&lt;/h5&gt;
&lt;p&gt;正则表达式通常用于在文本中查找匹配的字符串。&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；非贪婪的则相反，总是尝试匹配尽可能少的字符。例如：正则表达式&lt;code class=&quot;highlighter-rouge&quot;&gt;”ab*”&lt;/code&gt;如果用于查找&lt;code class=&quot;highlighter-rouge&quot;&gt;”abbbc”&lt;/code&gt;，将找到&lt;code class=&quot;highlighter-rouge&quot;&gt;”abbb”&lt;/code&gt;。而如果使用非贪婪的数量词&lt;code class=&quot;highlighter-rouge&quot;&gt;”ab*?”&lt;/code&gt;，将找到&lt;code class=&quot;highlighter-rouge&quot;&gt;”a”&lt;/code&gt;。&lt;/p&gt;

&lt;h5 id=&quot;反斜杠&quot;&gt;反斜杠&lt;/h5&gt;
&lt;p&gt;与大多数编程语言相同，正则表达式里使用&lt;code class=&quot;highlighter-rouge&quot;&gt;”\”&lt;/code&gt;作为转义字符，这就可能造成反斜杠困扰。假如你需要匹配文本中的字符&lt;code class=&quot;highlighter-rouge&quot;&gt;”\”&lt;/code&gt;，那么使用编程语言表示的正则表达式里将需要4个反斜杠&lt;code class=&quot;highlighter-rouge&quot;&gt;”\\\\”&lt;/code&gt;：前两个和后两个分别用于在编程语言里转义成反斜杠，转换成两个反斜杠后再在正则表达式里转义成一个反斜杠。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt;里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;r”\\”&lt;/code&gt;表示。同样，匹配一个数字的&lt;code class=&quot;highlighter-rouge&quot;&gt;”\\d”&lt;/code&gt;可以写成&lt;code class=&quot;highlighter-rouge&quot;&gt;r”\d”&lt;/code&gt;。有了原生字符串，妈妈也不用担心是不是漏写了反斜杠，写出来的表达式也更直观勒。&lt;/p&gt;

&lt;h4 id=&quot;re模块&quot;&gt;Re模块&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#返回pattern对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  
&lt;span class=&quot;c&quot;&gt;#以下为匹配所用函数&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxsplit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finditer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;可以理解为一个匹配模式，我们需要利用&lt;code class=&quot;highlighter-rouge&quot;&gt;re.compile&lt;/code&gt;方法获取&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在参数中我们传入了原生字符串对象，通过compile方法编译生成一个pattern对象，然后我们利用这个对象来进行进一步的匹配。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;参数flag是匹配模式，取值可以使用按位或运算符’&lt;/td&gt;
      &lt;td&gt;’表示同时生效，比如re.I&lt;/td&gt;
      &lt;td&gt;re.M。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;可选值有：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;re.I(全拼：IGNORECASE): 忽略大小写（括号内是完整写法，下同）&lt;/li&gt;
    &lt;li&gt;re.M(全拼：MULTILINE): 多行模式，改变’^’和’$’的行为（参见上图）&lt;/li&gt;
    &lt;li&gt;re.S(全拼：DOTALL): 点任意匹配模式，改变’.’的行为&lt;/li&gt;
    &lt;li&gt;re.L(全拼：LOCALE): 使预定字符类 \w \W \b \B \s \S 取决于当前区域设定&lt;/li&gt;
    &lt;li&gt;re.U(全拼：UNICODE): 使预定字符类 \w \W \b \B \s \S \d \D 取决于unicode定义的字符属性&lt;/li&gt;
    &lt;li&gt;re.X(全拼：VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;注：以下七个方法中的flags同样是代表匹配模式的意思，如果在pattern生成时已经指明了flags，那么在下面的方法中就不需要传入这个参数了。&lt;/em&gt;&lt;/p&gt;

&lt;h5 id=&quot;rematchpattern-string-flags&quot;&gt;re.match(pattern, string[, flags])&lt;/h5&gt;
&lt;p&gt;这个方法将会从&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;（我们要匹配的字符串）的开头开始，尝试匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;，一直向后匹配，如果遇到无法匹配的字符，立即返回&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;，如果匹配未结束已经到达&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;的末尾，也会返回&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;。两个结果均表示匹配失败，否则匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;成功，同时匹配终止，不再对&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;向后匹配。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;__author__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'CQC'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#导入re模块&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 将正则表达式编译成Pattern对象，注意hello前面的r的意思是“原生字符串”&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 使用re.match匹配文本，获得匹配结果，无法匹配时将返回None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'helloo CQC!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'helo CQC!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hello CQC!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#如果1匹配成功&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 使用Match获得分组信息&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1匹配失败！'&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;#如果2匹配成功&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 使用Match获得分组信息&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'2匹配失败！'&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;#如果3匹配成功&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 使用Match获得分组信息&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'3匹配失败！'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#如果4匹配成功&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 使用Match获得分组信息&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'4匹配失败！'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;匹配分析&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;第一个匹配，&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;正则表达式为&lt;code class=&quot;highlighter-rouge&quot;&gt;’hello’&lt;/code&gt;，我们匹配的目标字符串&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;也为&lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt;，从头至尾完全匹配，匹配成功。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;第二个匹配，&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;helloo CQC&lt;/code&gt;，从&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;头开始匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;完全可以匹配，&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;匹配结束，同时匹配终止，后面的&lt;code class=&quot;highlighter-rouge&quot;&gt;o CQC&lt;/code&gt;不再匹配，返回匹配成功的信息。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;第三个匹配，&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;helo CQC&lt;/code&gt;，从&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;头开始匹配&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;，发现到 &lt;code class=&quot;highlighter-rouge&quot;&gt;‘o’&lt;/code&gt; 时无法完成匹配，匹配终止，返回&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;第四个匹配，同第二个匹配原理，即使遇到了空格符也不会受影响。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我们还看到最后打印出了&lt;code class=&quot;highlighter-rouge&quot;&gt;result.group()&lt;/code&gt;，这个是什么意思呢？下面我们说一下关于&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;对象的的属性和方法
&lt;code class=&quot;highlighter-rouge&quot;&gt;Match&lt;/code&gt;对象是一次匹配的结果，包含了很多关于此次匹配的信息，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Match&lt;/code&gt;提供的可读属性或方法来获取这些信息。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;属性：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;string: 匹配时使用的文本。&lt;/li&gt;
    &lt;li&gt;re: 匹配时使用的Pattern对象。&lt;/li&gt;
    &lt;li&gt;pos: 文本中正则表达式开始搜索的索引。值与Pattern.match()和Pattern.seach()方法的同名参数相同。&lt;/li&gt;
    &lt;li&gt;endpos: 文本中正则表达式结束搜索的索引。值与Pattern.match()和Pattern.seach()方法的同名参数相同。&lt;/li&gt;
    &lt;li&gt;lastindex: 最后一个被捕获的分组在文本中的索引。如果没有被捕获的分组，将为None。&lt;/li&gt;
    &lt;li&gt;lastgroup: 最后一个被捕获的分组的别名。如果这个分组没有别名或者没有被捕获的分组，将为None。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;方法：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;group([group1, …]):
获得一个或多个分组截获的字符串；指定多个参数时将以元组形式返回。group1可以使用编号也可以使用别名；编号0代表整个匹配的子串；不填写参数时，返回group(0)；没有截获字符串的组返回None；截获了多次的组返回最后一次截获的子串。&lt;/li&gt;
    &lt;li&gt;groups([default]):
以元组形式返回全部分组截获的字符串。相当于调用group(1,2,…last)。default表示没有截获字符串的组以这个值替代，默认为None。&lt;/li&gt;
    &lt;li&gt;groupdict([default]):
返回以有别名的组的别名为键、以该组截获的子串为值的字典，没有别名的组不包含在内。default含义同上。&lt;/li&gt;
    &lt;li&gt;start([group]):
返回指定的组截获的子串在string中的起始索引（子串第一个字符的索引）。group默认值为0。&lt;/li&gt;
    &lt;li&gt;end([group]):
返回指定的组截获的子串在string中的结束索引（子串最后一个字符的索引+1）。group默认值为0。&lt;/li&gt;
    &lt;li&gt;span([group]):
返回(start(group), end(group))。&lt;/li&gt;
    &lt;li&gt;expand(template):
将匹配到的分组代入template中然后返回。template中可以使用\id或\g、\g引用分组，但不能使用编号0。\id与\g是等价的；但\10将被认为是第10个分组，如果你想表达\1之后是字符’0’，只能使用\g0。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#一个简单的match实例&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 匹配如下内容：单词+空格+单词+任意字符&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(\w+) (\w+)(?P&amp;lt;sign&amp;gt;.*)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'hello world!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.string:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.re:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.pos:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.endpos:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endpos&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.lastindex:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastindex&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.lastgroup:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastgroup&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.group():&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.group(1,2):&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.groups():&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.groupdict():&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.start(2):&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.end(2):&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;m.span(2):&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r&quot;m.expand(r'\g \g\g'):&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\2 \1\3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.string: hello world!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.re: &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.pos: 0&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.endpos: 12&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.lastindex: 3&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.lastgroup: sign&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.group(1,2): ('hello', 'world')&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.groups(): ('hello', 'world', '!')&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.groupdict(): {'sign': '!'}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.start(2): 6&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.end(2): 11&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.span(2): (6, 11)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# m.expand(r'\2 \1\3'): world hello!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;researchpattern-string-flags&quot;&gt;re.search(pattern, string[, flags])&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;search&lt;/code&gt;方法与&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;方法极其类似，区别在于&lt;code class=&quot;highlighter-rouge&quot;&gt;match()&lt;/code&gt;函数只检测&lt;code class=&quot;highlighter-rouge&quot;&gt;re&lt;/code&gt;是不是在&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;的开始位置匹配，&lt;code class=&quot;highlighter-rouge&quot;&gt;search()&lt;/code&gt;会扫描整个&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;查找匹配，&lt;code class=&quot;highlighter-rouge&quot;&gt;match（）&lt;/code&gt;只有在0位置匹配成功的话才有返回，如果不是开始位置匹配成功的话，&lt;code class=&quot;highlighter-rouge&quot;&gt;match()&lt;/code&gt;就返回&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;。同样，&lt;code class=&quot;highlighter-rouge&quot;&gt;search&lt;/code&gt;方法的返回对象同样&lt;code class=&quot;highlighter-rouge&quot;&gt;match()&lt;/code&gt;返回对象的方法和属性。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#导入re模块&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 将正则表达式编译成Pattern对象&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 使用search()查找匹配的子串，不存在能匹配的子串时将返回None&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 这个例子中使用match()无法成功匹配&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hello world!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 使用Match获得分组信息&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### 输出 ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# world&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;resplitpattern-string-maxsplit&quot;&gt;re.split(pattern, string[, maxsplit])&lt;/h5&gt;
&lt;p&gt;按照能够匹配的子串将&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;分割后返回列表。&lt;code class=&quot;highlighter-rouge&quot;&gt;maxsplit&lt;/code&gt;用于指定最大分割次数，不指定将全部分割&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'one1two2three3four4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### 输出 ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ['one', 'two', 'three', 'four', '']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;refindallpattern-string-flags&quot;&gt;re.findall(pattern, string[, flags])&lt;/h5&gt;
&lt;p&gt;搜索string，以列表形式返回全部能匹配的子串&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'one1two2three3four4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### 输出 ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ['1', '2', '3', '4']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;refinditerpattern-string-flags&quot;&gt;re.finditer(pattern, string[, flags])&lt;/h5&gt;
&lt;p&gt;搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;finditer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'one1two2three3four4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### 输出 ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 1 2 3 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;resubpattern-repl-string-count&quot;&gt;re.sub(pattern, repl, string[, count])&lt;/h5&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;repl&lt;/code&gt;替换&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt;中每一个匹配的子串后返回替换后的字符串。
当&lt;code class=&quot;highlighter-rouge&quot;&gt;repl&lt;/code&gt;是一个字符串时，可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;\id&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;\g&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;\g&lt;/code&gt;引用分组，但不能使用编号0。
当&lt;code class=&quot;highlighter-rouge&quot;&gt;repl&lt;/code&gt;是一个方法时，这个方法应当只接受一个参数（&lt;code class=&quot;highlighter-rouge&quot;&gt;Match&lt;/code&gt;对象），并返回一个字符串用于替换（返回的字符串中不能再引用分组）。
&lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt;用于指定最多替换次数，不指定时全部替换。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(\w+) (\w+)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'i say, hello world!'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\2 \1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# say i, world hello!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# I Say, Hello World!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;resubnpattern-repl-string-count&quot;&gt;re.subn(pattern, repl, string[, count])&lt;/h5&gt;
&lt;p&gt;返回 (sub(repl, string[, count]), 替换次数)&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(\w+) (\w+)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'i say, hello world!'&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\2 \1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 
&lt;span class=&quot;c&quot;&gt;### output ###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ('say i, world hello!', 2)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ('I Say, Hello World!', 2)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在上面我们介绍了7个工具方法，例如&lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;search&lt;/code&gt;等等，不过调用方式都是 &lt;code class=&quot;highlighter-rouge&quot;&gt;re.match&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;re.search&lt;/code&gt;的方式，其实还有另外一种调用方式，可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern.match&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern.search&lt;/code&gt;调用，这样调用便不用将&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern&lt;/code&gt;作为第一个参数传入了，大家想怎样调用皆可。&lt;/p&gt;

&lt;p&gt;函数API列表&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;table&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;td&gt;match(string[, pos[, endpos]])&lt;/td&gt;
            &lt;td&gt;re.match(pattern, string[, flags])&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;table&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;td&gt;search(string[, pos[, endpos]])&lt;/td&gt;
            &lt;td&gt;re.search(pattern, string[, flags])&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;table&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;td&gt;split(string[, maxsplit])&lt;/td&gt;
            &lt;td&gt;re.split(pattern, string[, maxsplit])&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;table&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;td&gt;findall(string[, pos[, endpos]])&lt;/td&gt;
            &lt;td&gt;re.findall(pattern, string[, flags])&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;table&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;td&gt;finditer(string[, pos[, endpos]])&lt;/td&gt;
            &lt;td&gt;re.finditer(pattern, string[, flags])&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;table&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;td&gt;sub(repl, string[, count])&lt;/td&gt;
            &lt;td&gt;re.sub(pattern, repl, string[, count])&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;table&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;td&gt;subn(repl, string[, count])&lt;/td&gt;
            &lt;td&gt;re.sub(pattern, repl, string[, count])&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Tue, 24 May 2016 02:00:00 +0800</pubDate>
        <link>http://zrocky.com/2016/05/python-crawier/</link>
        <guid isPermaLink="true">http://zrocky.com/2016/05/python-crawier/</guid>
        
        <category>Python</category>
        
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>iOS Develop Guideline</title>
        <description>&lt;p&gt;&lt;strong&gt;本规范因为Xcode版本的更迭，部分内容已经不太适用。本文仅供参考。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;以下是我们公司在iOS开发前需要了解的开发规范, 总结自日常的开发过程和团队所有的经验.&lt;/p&gt;

&lt;h2 id=&quot;开发工具&quot;&gt;开发工具&lt;/h2&gt;

&lt;p&gt;以下列举了我们公司在iOS开发中经常使用到工具, 并附上地址, 原则上需要全部安装&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/downloads/&quot;&gt;Xcode 历史版本&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ruby.taobao.org/&quot;&gt;RubyGems (Ruby环境)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://alcatraz.io/&quot;&gt;Alcatraz (Xcode开发工具安装包)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;以下插件均可在Alcatraz插件安装包中下载安装&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/markohlebar/Peckham&quot;&gt;Peckham (头文件快捷导入)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kattrali/cocoapods-xcode-plugin&quot;&gt;cocoapods plugin (cocoapods插件)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Zrocky/VVDocumenter-Xcode&quot;&gt;VVDocumenter (文档快捷注释)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;文件规范&quot;&gt;文件规范&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Project
 	- Classes
 		- Tool
 		- Expand
 			- Macros
 				- Macro.h
 				- A Macro.h
 				- B Macro.h
 			- Const
 				- Const.h
 				- A Const.h
 				- B Const.h
			- DataBase
 			- CoreData
 		- Category
 			- UI
 				- UIView
 				- UIButton
 				- UIViewController
 				- UITableView
 				- UIImage
 			- Data
 				- NSDate
 				- NSString
 		- NetworkCenter
 			- APIManager
 				- A Module
 				- B Module
 			- Foundation
 		- Vender
 	- Resource
 		- Image
 		- Font
 		- Video
 		- Audio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;代码区块规范&quot;&gt;代码区块规范&lt;/h2&gt;

&lt;h3 id=&quot;controller代码区块规范&quot;&gt;Controller代码区块规范&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#pragma mark - life cycle
- (void)viewDidLoad {
	[super viewDidLoad];

    [self setupLayouts];
}
- (void)setupLayouts {
}
- (void)viewWillAppear:(BOOL)animated {
     [super viewWillAppear:animated];
}
#pragma mark - delegate
#pragma mark - event response
#pragma mark - public methods
#pragma mark - private methods
#pragma mark - setter and getter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;view代码区块规范&quot;&gt;View代码区块规范&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#pragma mark - life cycle
- (instancetype)initWithFrame:(CGRect)frame {
     if (self = [super initWithFrame:frame]) {
         [self setupSubviews];
         [self setupLayouts];
     }
     return self;
}
- (void)setupSubviews {
}
- (void)setupLayouts {
}
#pragma mark - delegate
#pragma mark - event response
#pragma mark - public methods
#pragma mark - private methods
#pragma mark - setter and getter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 04 May 2016 02:00:00 +0800</pubDate>
        <link>http://zrocky.com/2016/05/ios-develop-guideline/</link>
        <guid isPermaLink="true">http://zrocky.com/2016/05/ios-develop-guideline/</guid>
        
        <category>iOS</category>
        
        
        <category>iOS</category>
        
      </item>
    
  </channel>
</rss>
